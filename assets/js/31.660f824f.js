(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{311:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jvm笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm笔记"}},[t._v("#")]),t._v(" JVM笔记")]),t._v(" "),s("h2",{attrs:{id:"运行时数据区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时数据区域"}},[t._v("#")]),t._v(" 运行时数据区域")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Java 虚拟机所管理的内存包括以下运行时数据区：")]),t._v(" "),s("ul",[s("li",[t._v("方法区")]),t._v(" "),s("li",[t._v("堆")]),t._v(" "),s("li",[t._v("虚拟机栈")]),t._v(" "),s("li",[t._v("本地方法栈")]),t._v(" "),s("li",[t._v("程序计数器")])])]),t._v(" "),s("li",[s("p",[t._v("其中，"),s("strong",[t._v("方法区和堆是所有线程共享的")]),t._v("，其他三个区域是线程隔离的")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210405171022000.png",alt:"image-20210405171022000"}})])])]),t._v(" "),s("h3",{attrs:{id:"程序计数器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器"}},[t._v("#")]),t._v(" 程序计数器")]),t._v(" "),s("ul",[s("li",[t._v("一块较小的内存区域，可视为"),s("strong",[t._v("当前线程执行的字节码的行号指示器")])]),t._v(" "),s("li",[t._v("每个线程都有独立的计数器且相互不影响，为线程私有")]),t._v(" "),s("li",[t._v("当线程执行的是一个Java方法时，程序计数器指向执行的字节码指令的地址。若执行本地方法(Native Method)，则计数器的值应该为空(Undifined)")]),t._v(" "),s("li",[t._v("此区域是JVM规范中唯一没有规定OutOfMemoryError的区域")])]),t._v(" "),s("h3",{attrs:{id:"java虚拟机栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java虚拟机栈"}},[t._v("#")]),t._v(" Java虚拟机栈")]),t._v(" "),s("ul",[s("li",[t._v("线程私有。生命周期同线程")]),t._v(" "),s("li",[t._v("虚拟机栈描述Java方法执行的线程内存模型\n"),s("ul",[s("li",[t._v("每个方法被执行的时候，虚拟机会创建一个帧栈用于存储局部变量表、操作数栈、动态链接、方法出口等信息")])])]),t._v(" "),s("li",[t._v("在此内存区域中，线程请求栈深度大于区域允许最大深度时，将抛出"),s("strong",[t._v("StackOverFlow")]),t._v("异常")])]),t._v(" "),s("h3",{attrs:{id:"本地方法栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈"}},[t._v("#")]),t._v(" 本地方法栈")]),t._v(" "),s("ul",[s("li",[t._v("类似于Java虚拟机栈，不过本地方法栈为调用本地方法(Native Method)服务")]),t._v(" "),s("li",[t._v("有些Java虚拟机将本地方法栈和Java虚拟机栈进行了合并")])]),t._v(" "),s("h3",{attrs:{id:"java堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java堆"}},[t._v("#")]),t._v(" Java堆")]),t._v(" "),s("ul",[s("li",[t._v("Java虚拟机管理内存的最大的一块。被所有线程共享")]),t._v(" "),s("li",[t._v("在虚拟机启动时创建")]),t._v(" "),s("li",[t._v("几乎所有的数组和对象的内存都是在堆上分配的(常量放在常量池？——方法区)")]),t._v(" "),s("li",[t._v("Java堆是垃圾收集器管理的区域，因此也成为"),s("strong",[t._v("GC堆")])]),t._v(" "),s("li",[t._v("目前主流的Java堆大小都是可扩展的，可通过参数 "),s("strong",[t._v("-Xmx和-Xms")]),t._v(" 设定")]),t._v(" "),s("li",[t._v("内存分配完时，抛出OutOfMemory异常")])]),t._v(" "),s("h3",{attrs:{id:"方法区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区"}},[t._v("#")]),t._v(" 方法区")]),t._v(" "),s("ul",[s("li",[t._v("线程共享的区域")]),t._v(" "),s("li",[t._v("用于存储已被虚拟机加载的"),s("strong",[t._v("类型信息、常量、静态变量、即时编译器编译后的代码缓存")]),t._v("等数据")]),t._v(" "),s("li",[t._v("此区域回收内存的主要目标是常量池的回收和类型卸载")])]),t._v(" "),s("h3",{attrs:{id:"运行时常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时常量池"}},[t._v("#")]),t._v(" 运行时常量池")]),t._v(" "),s("ul",[s("li",[t._v("方法区的一部分")]),t._v(" "),s("li",[t._v("Class文件中除了有类的版本、字段、方法、接口等描述信息，还有一项信息是"),s("strong",[t._v("常量池表")])]),t._v(" "),s("li",[t._v("常量池表用于存放编译期生成的各种"),s("strong",[t._v("字面量")]),t._v("和"),s("strong",[t._v("符号引用")]),t._v("。此部分会在类加载后放到方法区的常量池中")])]),t._v(" "),s("h3",{attrs:{id:"直接内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接内存"}},[t._v("#")]),t._v(" 直接内存")]),t._v(" "),s("ul",[s("li",[t._v("直接内存并"),s("strong",[t._v("不是")]),t._v("虚拟机运行时数据区的一部分")]),t._v(" "),s("li",[t._v("也可能导致OutOfMemory异常")]),t._v(" "),s("li",[t._v("Java的NIO引入了基于通道(Channel)与缓冲区(Buffer)的IO方式，其可使用Native函数库直接分配"),s("strong",[t._v("堆外内存")]),t._v("，然后通过存储在Java堆中的"),s("code",[t._v("DirectByteBuffer")]),t._v("对象作为这块内存的引用进行操作，这样可在某些场景提高性能，避免Java堆和Native堆中来回复制数据")])]),t._v(" "),s("h2",{attrs:{id:"hotspot虚拟机对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hotspot虚拟机对象"}},[t._v("#")]),t._v(" HotSpot虚拟机对象")]),t._v(" "),s("h3",{attrs:{id:"对象创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象创建"}},[t._v("#")]),t._v(" 对象创建")]),t._v(" "),s("ul",[s("li",[t._v("当JVM遇到一条字节码"),s("code",[t._v("new")]),t._v("指令时，首先检查此指令的参数能否在常量池定位到一个类的符号引用，并检查此符号引用代表的类是否已经加载、解析和初始化。若没有则先执行"),s("strong",[t._v("类加载")]),t._v("过程")]),t._v(" "),s("li",[t._v("内存分配的两种常见方式\n"),s("ul",[s("li",[t._v("指针碰撞(Bump The Pointer)\n"),s("ul",[s("li",[t._v("当Java堆的内存是绝对规整时(已分配的放一边，未分配的放一边，中间用指针作为分界)，分配内存只需要将指针往空闲方向移动对象大小的距离")])])]),t._v(" "),s("li",[t._v("空闲列表(FreeList)\n"),s("ul",[s("li",[t._v("当Java堆内存非规整时，虚拟机需要维护一个列表记录哪些内存块可以分配，分配时划分给对象并更新表")])])])])]),t._v(" "),s("li",[t._v("为了解决分配内存存在的"),s("strong",[t._v("并发安全")]),t._v("问题，有两种方案：\n"),s("ul",[s("li",[t._v("对分配空间的操作进行同步处理：CAS(Compare And Swap)+失败重试")]),t._v(" "),s("li",[t._v("把分配内存的操作按线程划分在不同的空间中：每个线程预先在Java堆中分配一小块内存——本地线程分配缓冲(Thread Local Allocation Buffer, TLAB)。当线程的缓冲区用完时才需要同步")]),t._v(" "),s("li",[t._v("虚拟机是否使用TLAB，通过 "),s("strong",[t._v("-XX +/-useTLAB")]),t._v(" 设定")])])]),t._v(" "),s("li",[t._v("内存分配完成后，虚拟机将新分配的空间( 不包含对象头)"),s("strong",[t._v("初始化为零值")]),t._v("，保证对象实例字段不用初始化就能使用。使用了TLAB时可将初始化零值的过程放到TLAB分配时进行")]),t._v(" "),s("li",[t._v("之后，JVM还要对对象进行必要设置，如对象是哪个类的实例、如何找到类的元数据信息、对象的GC分代年龄信息等。这些信息存放在 "),s("strong",[t._v("对象头(Object Header)")]),t._v(" 中")]),t._v(" "),s("li",[t._v("经过上述步骤后，从JVM的角度，对象已经创建了，但从Java程序的角度，对象创建才刚开始：对象的"),s("strong",[t._v("构造函数")]),t._v("，即"),s("code",[t._v("Class")]),t._v("文件中的"),s("code",[t._v("<init>()")]),t._v("方法还没执行，所有字段都为零值")])]),t._v(" "),s("h3",{attrs:{id:"对象的内存布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的内存布局"}},[t._v("#")]),t._v(" 对象的内存布局")]),t._v(" "),s("ul",[s("li",[t._v("在HotSpot中，对象在Java堆中的存储布局可分为三部分："),s("strong",[t._v("对象头(Header)")]),t._v("、"),s("strong",[t._v("实例数据(Instance Data)")]),t._v("、"),s("strong",[t._v("对齐填充(Padding)")])]),t._v(" "),s("li",[s("strong",[t._v("对象头")]),t._v("包含两类信息：\n"),s("ul",[s("li",[t._v("存储对象自身的运行时数据：哈希值、GC分代年龄、锁状态标志、偏向线程ID等。此部分在32、64位的虚拟机中分别占32、64bit，官方称为"),s("strong",[t._v("Mark Word")])]),t._v(" "),s("li",[t._v("指针类型：对象指向其类型元数据的指针。JVM通过该指针确定对象是哪个类的实例")])])]),t._v(" "),s("li",[s("strong",[t._v("实例数据")]),t._v("部分是对象真正存储的有效信息，即各种字段的内容\n"),s("ul",[s("li",[t._v("此部分的存储顺序会受到虚拟机分配策略参数 "),s("strong",[t._v("-XX: FieldsAllocationStyle")]),t._v(" 和字段在代码中定义顺序的影响")]),t._v(" "),s("li",[t._v("默认分配顺序为：longs/doubles、ints、shorts/chars、bytes/booleans、oops（Ordinary Object Pointers,OOPs）")]),t._v(" "),s("li",[t._v("若参数 "),s("strong",[t._v("+XX: CompactFields")]),t._v(" 为 true，子类中的较窄的变量也允许插入父类变量的空隙中以节省空间")])])]),t._v(" "),s("li",[s("strong",[t._v("对齐填充")]),t._v("部分不是必然存在的，也没有特殊含义。仅起占位符的作用\n"),s("ul",[s("li",[t._v("HotSpot虚拟机的自动内存管理"),s("strong",[t._v("要求对象的起始地址必须是8字节的整数倍")]),t._v("，即任何对象的大小都是 8 的整数倍")]),t._v(" "),s("li",[t._v("当实例数据没有对齐，则由填充来实现8字节整数倍的需求")])])])]),t._v(" "),s("h3",{attrs:{id:"对象的访问定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的访问定位"}},[t._v("#")]),t._v(" 对象的访问定位")]),t._v(" "),s("ul",[s("li",[t._v("Java程序会通过栈上的"),s("code",[t._v("reference")]),t._v("数据来操作堆上的具体对象")]),t._v(" "),s("li",[t._v("主流的访问方式主要有使用"),s("strong",[t._v("句柄")]),t._v("和"),s("strong",[t._v("直接指针")]),t._v("两种\n"),s("ul",[s("li",[t._v("使用句柄访问时，Java堆中可能会划分一块内存作为句柄池，此时"),s("code",[t._v("reference")]),t._v("中存储的就是对象句柄地址，而句柄中包含的时对象的实际数据地址")]),t._v(" "),s("li",[t._v("使用指针直接访问时，Java堆中的对象的内存布局需要考虑如何放置访问"),s("strong",[t._v("类型数据")]),t._v("的相关信息，"),s("code",[t._v("reference")]),t._v("中存储的就是对象的直接地址(数据)。访问对象时不需要多一次寻址开销")])])])]),t._v(" "),s("h2",{attrs:{id:"outofmemoryerror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#outofmemoryerror"}},[t._v("#")]),t._v(" OutOfMemoryError")]),t._v(" "),s("h3",{attrs:{id:"java堆溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java堆溢出"}},[t._v("#")]),t._v(" Java堆溢出")]),t._v(" "),s("ul",[s("li",[t._v("设置堆大小的参数：\n"),s("ul",[s("li",[s("code",[t._v("-Xms")]),t._v("：堆的最小值，如-Xms20M")]),t._v(" "),s("li",[s("code",[t._v("-Xmx")]),t._v("：堆的最大值")]),t._v(" "),s("li",[t._v("当上述两个值相等时，限制堆的大小不可扩展")])])]),t._v(" "),s("li",[t._v("Java堆用于存储对象，只要不断创建对象并保证GC Roots到对象之间有可达路径则其不会被回收")])]),t._v(" "),s("h3",{attrs:{id:"方法区和运行时常量池溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区和运行时常量池溢出"}},[t._v("#")]),t._v(" 方法区和运行时常量池溢出")]),t._v(" "),s("ul",[s("li",[t._v("JDK8开始，以前的“永久代”被“元空间”替代")]),t._v(" "),s("li",[t._v("从JDK7开始，原本放在永久代中的字符串常量池被移到"),s("strong",[t._v("Java堆中")])]),t._v(" "),s("li",[t._v("Java8中，HotSpot提供了一些参数作为元空间的防御措施，主要包括：\n"),s("ul",[s("li",[s("code",[t._v("-XX:MaxMetaspaceSize")]),t._v("：设置元空间最大值，默认为 -1 ，即不限制(只受限于本地内存)")]),t._v(" "),s("li",[s("code",[t._v("-XX:MetaspaceSize")]),t._v("：指定元空间初始大小，单位为字节。达到该值就会触发垃圾收集进行类卸载")]),t._v(" "),s("li",[s("code",[t._v("-XX:MinMetaspaceFreeRatio")]),t._v("：垃圾收集之后控制最小的元空间剩余容量的百分比。可减少因为元空间不足导致的垃圾收集频率")])])])]),t._v(" "),s("h3",{attrs:{id:"本机直接内存溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本机直接内存溢出"}},[t._v("#")]),t._v(" 本机直接内存溢出")]),t._v(" "),s("ul",[s("li",[t._v("直接内存的容量可通过"),s("code",[t._v("-XX:MaxDirectMemorySize")]),t._v("指定，不指定则默认值同Java堆大小")]),t._v(" "),s("li",[t._v("在使用"),s("code",[t._v("DirectByteBuffer")]),t._v("分配内存时可能会抛出内存溢出异常，但是抛出异常时并未真正向操作系统请求分配内存。而是直接通过计算判断")]),t._v(" "),s("li",[t._v("真正分配内存可使用"),s("code",[t._v("Unsafe::allocateMemory()")]),t._v("方法")])]),t._v(" "),s("h2",{attrs:{id:"垃圾收集与内存分配概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集与内存分配概述"}},[t._v("#")]),t._v(" 垃圾收集与内存分配概述")]),t._v(" "),s("ul",[s("li",[t._v("Java运行时内存区中，程序计数器、虚拟机栈、本地方法区3部分随线程生灭。栈中的栈帧随方法的进入和退出有序地进栈退栈")]),t._v(" "),s("li",[t._v("栈帧中分配多少内存"),s("strong",[t._v("基本上在类结构确定时就已知的")]),t._v("，因此在上述区域中，不用过多考虑如何回收内存。在线程结束是会自动回收")]),t._v(" "),s("li",[t._v("而对于"),s("strong",[t._v("Java堆，只有在运行时才能确定要创建哪些对象，需要多少内存")]),t._v("，因此，垃圾回收机制主要管理的就是Java堆的内存回收")])]),t._v(" "),s("h2",{attrs:{id:"对象的生死"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的生死"}},[t._v("#")]),t._v(" 对象的生死？")]),t._v(" "),s("h3",{attrs:{id:"引用计数算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用计数算法"}},[t._v("#")]),t._v(" 引用计数算法")]),t._v(" "),s("ul",[s("li",[t._v("在对象中添加一个"),s("strong",[t._v("引用计数器")]),t._v("，每当有一个地方引用时，计数器值加一，当引用失效时，计数器减一，当计数器的值为 0 时，表示此对象已经不再被使用")]),t._v(" "),s("li",[t._v("但主流的Java虚拟机并未使用引用计数，因为其可能存在一些难以处理的如循环引用的情况")])]),t._v(" "),s("h3",{attrs:{id:"可达性分析算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可达性分析算法"}},[t._v("#")]),t._v(" 可达性分析算法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Java、C#等语言都使用可达性分析(Reachability Analysis)算法判定对象是否存活")])]),t._v(" "),s("li",[s("p",[t._v("算法的思路为：通过一些列被称为"),s("strong",[t._v("GC Roots")]),t._v("的根对象作为起始节点集，从这些节点开始，根据引用关系向下搜索，搜索过程走过的路径称为"),s("strong",[t._v("引用链(Reference Chain)")]),t._v("，若某对象到GC Roots之间没有任何引用链(图论术语不可达)，则该对象不会再被使用")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210407222234130.png",alt:"image-20210407222234130"}})])])]),t._v(" "),s("h3",{attrs:{id:"引用的扩充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用的扩充"}},[t._v("#")]),t._v(" 引用的扩充")]),t._v(" "),s("ul",[s("li",[t._v("JDK1.2后，Java对引用进行了扩充，将引用分为：\n"),s("ul",[s("li",[t._v("强引用(Strongly Reference)\n"),s("ul",[s("li",[t._v("最传统的引用方式。如"),s("code",[t._v("Object obj = new Object()")]),t._v("这种引用关系。只要有强引用，GC就不会回收该对象")])])]),t._v(" "),s("li",[t._v("软引用(Soft Reference)\n"),s("ul",[s("li",[t._v("描述一些还有用但非必须的对象")]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("SoftReference")]),t._v("类实现软引用")]),t._v(" "),s("li",[t._v("只被软引用引用的对象"),s("strong",[t._v("在系统将要发生内存溢出前被列进回收返回进行二次回收")]),t._v("，回收后仍不够内存才抛出异常")])])]),t._v(" "),s("li",[t._v("弱引用(Weak Reference)\n"),s("ul",[s("li",[t._v("描述有用但非必须的对象，比软引用更弱")]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("WeakReference")]),t._v("类实现弱引用")]),t._v(" "),s("li",[t._v("被弱引用的对象"),s("strong",[t._v("只能生存到下一次垃圾回收")]),t._v("发生为止。下一次垃圾回收发生时，弱引用的对象就会被回收，不管内存是否足够")])])]),t._v(" "),s("li",[t._v("虚引用(Phantom Reference)\n"),s("ul",[s("li",[t._v("最弱的引用关系。对象是否有虚引用的存在完全不影响其生存周期。")]),t._v(" "),s("li",[t._v("无法通过虚引用获得对象实例")]),t._v(" "),s("li",[t._v("用虚引用的唯一目的是为了能在对象被回收时收到一个系统通知")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("PhantomReference")]),t._v("类实现虚引用")])])])])])]),t._v(" "),s("h3",{attrs:{id:"何时死亡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时死亡"}},[t._v("#")]),t._v(" 何时死亡")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在可达性分析中判定为不可达的对象并非一定被回收不可，此时还处于“缓刑”阶段")])]),t._v(" "),s("li",[s("p",[t._v("一个对象真正“死亡”至少需要经过两次标记")]),t._v(" "),s("ul",[s("li",[t._v("可达性分析时不可达则被"),s("strong",[t._v("第一次标记")]),t._v("。随后进行一次筛选，条件是此对象是否有必要执行"),s("code",[t._v("finalize()")]),t._v("方法，若对象没有覆盖"),s("code",[t._v("finalize()")]),t._v("方法或已经被虚拟机调用，则认为没有必要执行")]),t._v(" "),s("li",[t._v("若对象被判定有必要执行"),s("code",[t._v("finalize()")]),t._v("方法，则该对象被放在一个叫"),s("strong",[t._v("F-Queue")]),t._v("的队列中，并在之后由一个虚拟机创建的、低调度优先级的"),s("strong",[t._v("Finalizer")]),t._v("线程去执行对象的"),s("code",[t._v("finalize()")]),t._v("方法")]),t._v(" "),s("li",[s("code",[t._v("finalize()")]),t._v("方法是对象不被回收的最后的机会。稍后垃圾收集将对"),s("strong",[t._v("F-Queue")]),t._v("中的对象进行"),s("strong",[t._v("第二次小规模标记")]),t._v("。对象可通过"),s("code",[t._v("finalize()")]),t._v("方法将自己关联到引用链上即可避免被回收(虽然执行了finalize())，否则就会被回收")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 此代码演示了两点：\n* 1.对象可以在被GC时自我拯救。\n* 2.这种自救的机会只有一次，因为一个对象的finalize()方法最多只会被系统自动调用一次\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FinalizeEscapeGC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可作为GC Roots 的静态变量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FinalizeEscapeGC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAlive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yes, i am still alive :)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重写 finalize 方法")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finalize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finalize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"finalize method executed!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将 this 赋给静态变量，挂在引用链上，实现“自我救赎”")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FinalizeEscapeGC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FinalizeEscapeGC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对象第一次成功拯救自己")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//手动调用垃圾回收")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为Finalizer方法优先级很低，暂停0.5秒，以等待它")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAlive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no, i am dead :("')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面这段代码与上面的完全相同，但是这次自救却失败了，因为finalize()只调用一次")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为Finalizer方法优先级很低，暂停0.5秒，以等待它")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SAVE_HOOK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAlive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no, i am dead :("')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("finalize()")]),t._v("方法运行代价高且具有不确定性，无法得知哪个对象的该方法先被调用，一般不推荐使用")])])]),t._v(" "),s("h3",{attrs:{id:"回收方法区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回收方法区"}},[t._v("#")]),t._v(" 回收方法区")]),t._v(" "),s("ul",[s("li",[t._v("方法区的垃圾回收主要回收两部分内容：\n"),s("ul",[s("li",[t._v("废弃的常量")]),t._v(" "),s("li",[t._v("不再使用的类型")])])]),t._v(" "),s("li",[t._v("判断常量是否被引用的条件相对简单，而判断类型是否是不再使用的类，需要同时满足三个条件\n"),s("ul",[s("li",[t._v("该类所有的实例都已经被回收")]),t._v(" "),s("li",[t._v("加载该类的类加载器已经被回收")]),t._v(" "),s("li",[t._v("该类对应的"),s("code",[t._v("java.lang.Class")]),t._v("对象没有在任何地方被引用")])])]),t._v(" "),s("li",[t._v("对于同时满足上述三个条件的类型，虚拟机"),s("strong",[t._v("允许")]),t._v("该类型被回收，而具体的类型是否被回收取决于虚拟机参数")]),t._v(" "),s("li",[t._v("HotSpot提供了"),s("code",[t._v("-Xnoclassgc")]),t._v("参数用于指定不回收类型")]),t._v(" "),s("li",[t._v("此外，可使用"),s("code",[t._v("-verbose:class")]),t._v("以及"),s("code",[t._v("-XX:+TraceClassLoading")]),t._v("、"),s("code",[t._v("-XX:+TraceClassUnLoading")]),t._v("查看类加载和卸载信息。其中，前二者可在Product版虚拟机中使用，后者需要FastDebug版虚拟机支持")]),t._v(" "),s("li",[t._v("在大量使用反射、动态代理、GCLib等字节码框架，动态生成JSP以及OSGi这类频繁自定义类加载器的场景中，通常需要虚拟机具备类型卸载能力")])]),t._v(" "),s("h2",{attrs:{id:"垃圾收集算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集算法"}},[t._v("#")]),t._v(" 垃圾收集算法")]),t._v(" "),s("h3",{attrs:{id:"分代收集理论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分代收集理论"}},[t._v("#")]),t._v(" 分代收集理论")]),t._v(" "),s("ul",[s("li",[t._v("多数商业虚拟机都遵循了“分代收集理论”")]),t._v(" "),s("li",[t._v("建立在两个假说之上\n"),s("ul",[s("li",[s("strong",[t._v("弱分代假说")]),t._v(" "),s("ul",[s("li",[t._v("绝大多数对象都是朝生夕灭的")])])]),t._v(" "),s("li",[s("strong",[t._v("强分代假说")]),t._v(" "),s("ul",[s("li",[t._v("熬过越多次垃圾回收过程的对象越难消亡")])])])])]),t._v(" "),s("li",[t._v("根据上述假说，衍生出多数垃圾收集的原则：将Java堆划分为多个区域，然后将回收对象"),s("strong",[t._v("根据年龄")]),t._v("分配到不同区域")]),t._v(" "),s("li",[t._v("根据区域划分回收，衍生出垃圾回收的分类：MinorGC、MajorGC、FullGC")]),t._v(" "),s("li",[t._v("分代理论在具体的虚拟机上，体现为至少将Java堆划分为"),s("strong",[t._v("新生代(Young Generation)"),s("strong",[t._v("和")]),t._v("老年代(Old Generation)")])]),t._v(" "),s("li",[t._v("新生代中每次回收都会有大量对象“死去”，存留下来的逐渐进入老年代")]),t._v(" "),s("li",[t._v("收集分类：\n"),s("ul",[s("li",[t._v("新生代收集(MinorGC/YoungGC)：只回收新生代")]),t._v(" "),s("li",[t._v("老年代收集(MajorGC/OldGC)：只回收老年代")]),t._v(" "),s("li",[t._v("混合收集(MixedGC)：整个新生代和部分老年代")]),t._v(" "),s("li",[t._v("整堆收集(FullGC)：整个Java堆和方法区")])])])]),t._v(" "),s("h3",{attrs:{id:"标记-清除算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标记-清除算法"}},[t._v("#")]),t._v(" 标记-清除算法")]),t._v(" "),s("h3",{attrs:{id:"标记-复制算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标记-复制算法"}},[t._v("#")]),t._v(" 标记-复制算法")]),t._v(" "),s("h3",{attrs:{id:"标记-整理算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标记-整理算法"}},[t._v("#")]),t._v(" 标记-整理算法")]),t._v(" "),s("h2",{attrs:{id:"基础故障处理工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础故障处理工具"}},[t._v("#")]),t._v(" 基础故障处理工具")]),t._v(" "),s("h3",{attrs:{id:"jps-虚拟机进程状态工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jps-虚拟机进程状态工具"}},[t._v("#")]),t._v(" jps：虚拟机进程状态工具")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("jps(JVM Process Status)：列出正在运行的虚拟机进程，并显示虚拟机执行主类(main函数所在类)名称，以及这些进程的本地虚拟机唯一ID")])]),t._v(" "),s("li",[s("p",[t._v("格式")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("jps "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hostid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("主要选项")]),t._v(" "),s("ul",[s("li",[t._v("-q：只输出LVMID(本地虚拟机ID)，省略主类名称")]),t._v(" "),s("li",[t._v("-m：输出虚拟机启动时传递给main()函数的参数")]),t._v(" "),s("li",[t._v("-l：输出主类的全名，若执行的是jar包，则输出jar路径")]),t._v(" "),s("li",[t._v("-v：输出虚拟机进程启动时的JVM参数")])])])]),t._v(" "),s("h3",{attrs:{id:"jstat-虚拟机统计信息监视工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jstat-虚拟机统计信息监视工具"}},[t._v("#")]),t._v(" jstat：虚拟机统计信息监视工具")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("jstat(JVM statistics Monitoring Tool)：用于监视虚拟机各种运行状态信息的命令工具")])]),t._v(" "),s("li",[s("p",[t._v("可显示本地或远程虚拟机进程中的类加载、内存、垃圾收集、即时编译等运行数据")])]),t._v(" "),s("li",[s("p",[t._v("格式")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("jstat "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("option vmid "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("intervals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("对于vmid，在本地使用时同LVMID，远程时应使用以下格式：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("protocol:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("//"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" lvmid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@hostname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/servername"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("参数intervals 和 count表示查询间隔和次数")])]),t._v(" "),s("li",[s("p",[t._v("假设需要每250ms查询2764进程的GC信息(20次)：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("jstat "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-gc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2764")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"jinfo-java配置信息工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jinfo-java配置信息工具"}},[t._v("#")]),t._v(" jinfo：Java配置信息工具")]),t._v(" "),s("ul",[s("li",[t._v("jinfo(Configuration Info forJava)：实时查看和调整虚拟机各项参数")]),t._v(" "),s("li",[t._v("可使用"),s("code",[t._v("jinfo -flag")]),t._v("进行未被显式指定参数的系统默认值")]),t._v(" "),s("li",[t._v("也可用"),s("code",[t._v("jinfo -sysprops")]),t._v("把虚拟机进程的System.getProperties()打印出来")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("jinfo -flag [+/-]name")]),t._v("或"),s("code",[t._v("jinfo -flag name=value")]),t._v("的方式可动态修改一些虚拟机参数")])]),t._v(" "),s("h3",{attrs:{id:"jmap-java内存映像工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jmap-java内存映像工具"}},[t._v("#")]),t._v(" jmap：Java内存映像工具")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("jmap(Memory Map for Java)：用于生成堆转储快照(heap dump或dump文件)")])]),t._v(" "),s("li",[s("p",[t._v("jmap的作用不仅仅是获取堆转存快照，还可以查询finalize执行队列、Java堆和方法区的详细信息。如空间使用率、使用何种GC收集器等")])]),t._v(" "),s("li",[s("p",[t._v("jmap主要选项")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-dump")]),t._v(" "),s("td",[t._v("生成Java堆转存快照。格式：-dump:[live,]format=b,file=<filename> live指明是否只dump出活的对象")])]),t._v(" "),s("tr",[s("td",[t._v("-finalizerinfo")]),t._v(" "),s("td",[t._v("显式在F-Queue中等待执行finalize方法的对象")])]),t._v(" "),s("tr",[s("td",[t._v("-heap")]),t._v(" "),s("td",[t._v("显式Java堆的详细信息，如何种收集器、参数配置等")])]),t._v(" "),s("tr",[s("td",[t._v("-histo")]),t._v(" "),s("td",[t._v("显式堆中对象统计信息，类、实例数量、合计容量等")])]),t._v(" "),s("tr",[s("td",[t._v("-permstat")]),t._v(" "),s("td",[t._v("以ClassLoader为统计口径显示永久代内存状态")])]),t._v(" "),s("tr",[s("td",[t._v("-F")]),t._v(" "),s("td",[t._v("当虚拟机进程对-dump无响应时，可使用此参数强制dump")])])])])]),t._v(" "),s("li",[s("p",[t._v("示例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将内容LVMID=3500的虚拟机快照存为 eclipse.bin")]),t._v("\njmap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dump"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("eclipse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bin "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3500")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//....")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dumping")]),t._v(" heap "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Users")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IcyFenix")]),t._v("\\eclipse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Heap")]),t._v(" dump file created\n")])])])]),t._v(" "),s("li",[s("p",[t._v("and so on.......")])])]),t._v(" "),s("h2",{attrs:{id:"可视化故障处理工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可视化故障处理工具"}},[t._v("#")]),t._v(" 可视化故障处理工具")]),t._v(" "),s("ul",[s("li",[t._v("JConsole、JHSDB、VisualVM、JMC等可可视化地对程序进行分析")])]),t._v(" "),s("h3",{attrs:{id:"jhsdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jhsdb"}},[t._v("#")]),t._v(" JHSDB")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("JHSDB是一款基于服务性代理(Serviceability Agent,AS)实现的进程外调试工具")])]),t._v(" "),s("li",[s("p",[t._v("启动方式：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("jhsdb hsdb "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v("\nor\njhsdb hsdb\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"jconsole"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jconsole"}},[t._v("#")]),t._v(" JConsole")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("JConsole是一款基于JMX(Java Management Extensions)的可视化监视、管理工具")])]),t._v(" "),s("li",[s("p",[t._v("其功能主要是通过JMX的MBean对系统进行信息收集和参数动态调整")])]),t._v(" "),s("li",[s("p",[t._v("启动方式")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("jconsole\n")])])])])]),t._v(" "),s("p",[t._v("and so on.....")]),t._v(" "),s("h2",{attrs:{id:"类文件结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类文件结构"}},[t._v("#")]),t._v(" 类文件结构")]),t._v(" "),s("h3",{attrs:{id:"class类文件结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class类文件结构"}},[t._v("#")]),t._v(" Class类文件结构")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("任意一个Class文件都对应唯一的一个类或接口的定义信息。(但类和接口不一定必须定义在文件中，因为可以动态生成)")])]),t._v(" "),s("li",[s("p",[t._v("Class文件是一个由"),s("strong",[t._v("8字节")]),t._v("为基础单位的二进制流。各数据项严格按顺序紧凑地排列在文件中，没有任何分隔符。")])]),t._v(" "),s("li",[s("p",[t._v("当需要占用8字节以上空间时，则会按照"),s("strong",[t._v("高位在前")]),t._v("的方式分割成若干个8字节进行存储")])]),t._v(" "),s("li",[s("p",[t._v("根据Java虚拟机规范，Class文件格式采用一种类似C语言结构体的伪结构来存储数据，这种伪结构只有两种数据类型：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("无符号数")]),t._v(" "),s("ul",[s("li",[t._v("属于基本的数据类型，以u1、u2、u4、u8分别表示1字节、2字节....的无符号(Unsigned)数")]),t._v(" "),s("li",[t._v("可用于描述数字、索引引用、数量值或UTF-8编码的字符串")])])]),t._v(" "),s("li",[s("strong",[t._v("表")]),t._v(" "),s("ul",[s("li",[t._v("由多个无符号数或其他表作为数据项构成的复合数据结构，表的结尾通常以"),s("code",[t._v("_info")]),t._v("结尾")]),t._v(" "),s("li",[t._v("用于描述有层次关系的复合结构数据")])])])])]),t._v(" "),s("li",[s("p",[t._v("Class文件中的数据项表")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210422222229125.png",alt:"image-20210422222229125"}})]),t._v(" "),s("h3",{attrs:{id:"魔数与class类文件版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#魔数与class类文件版本"}},[t._v("#")]),t._v(" 魔数与Class类文件版本")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("每个Class文件的"),s("strong",[t._v("头4个字节")]),t._v("称为"),s("strong",[t._v("魔数(Magic Number)")])])]),t._v(" "),s("li",[s("p",[t._v("魔数的作用是确定某个文件是否是虚拟机能接受的Class文件")])]),t._v(" "),s("li",[s("p",[t._v("Class文件的魔数值为"),s("strong",[t._v("0XCAFEBABY")])])]),t._v(" "),s("li",[s("p",[t._v("紧接着魔数的4个字节存储的是Class文件的版本号：")]),t._v(" "),s("ul",[s("li",[t._v("第5、6个字节是次版本号(Minor Version)")]),t._v(" "),s("li",[t._v("第7、8个字节是主版本号(Major Version)")])]),t._v(" "),s("blockquote",[s("p",[t._v("注：Java的版本号是从 45 开始计算的。如文件中十六进制的38为十进制的56，56-45=11表示该Class文件可被JDK12及以上版本执行")])])])])])]),t._v(" "),s("h3",{attrs:{id:"常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量池"}},[t._v("#")]),t._v(" 常量池")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("紧接着主、次版本号之后的是常量池入口，常量池可看作Class文件的资源仓库")])]),t._v(" "),s("li",[s("p",[t._v("常量池是Class文件中与其他数据项关联最多的数据")])]),t._v(" "),s("li",[s("p",[t._v("因常量池中的常量数量是不固定的，因此常在常量池入口放置一个"),s("strong",[t._v("u2")]),t._v("类型(无符号2字节)的数据表示常量池容量计数(constant_pool_count)")])]),t._v(" "),s("li",[s("p",[t._v("容量计数从 1 开始")])]),t._v(" "),s("li",[s("p",[t._v("常量池中主要存放两大类常量：")]),t._v(" "),s("ul",[s("li",[t._v("字面量(Literal)：文本字符串、被声明为final的常量等接近Java语言层面的")]),t._v(" "),s("li",[t._v("符号引用(Symbol Reference)：被导入、开放的包，方法名称和描述、字段名称和描述等编译方面的")])])]),t._v(" "),s("li",[s("p",[t._v("常量池项目类型：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423102955036.png",alt:"image-20210423102955036"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423103026410.png",alt:"image-20210423103026410"}})])]),t._v(" "),s("li",[s("p",[t._v("常量池项目类型结构：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423103546399.png",alt:"image-20210423103546399"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423103604432.png",alt:"image-20210423103604432"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423103625366.png",alt:"image-20210423103625366"}})]),t._v(" "),s("h3",{attrs:{id:"字节码分析工具-javap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节码分析工具-javap"}},[t._v("#")]),t._v(" #字节码分析工具：javap")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("javap -verbose xx")]),t._v("可用于Class文件的字节码内容")])]),t._v(" "),s("li",[s("p",[t._v("如:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Users")]),t._v("\\xiao\\"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Desktop")]),t._v("\\test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" javap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("verbose "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Classfile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Users")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xiao"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Desktop")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Last")]),t._v(" modified "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("年"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("月"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("日"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" size "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("406")]),t._v(" bytes\n  "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MD5")]),t._v(" checksum "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3e9")]),t._v("bef6e55772798e178a68f3291d5ac\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Compiled")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Main.java"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v("\n  minor version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  major version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),t._v("\n  flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACC_PUBLIC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACC_SUPER")]),t._v("\n  this_class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("                          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Main")]),t._v("\n  super_class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java/lang/Object")]),t._v("\n  interfaces"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fields"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" methods"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constant")]),t._v(" pool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Methodref")]),t._v("          #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// java/lang/Object."<init>":()V')]),t._v("\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fieldref")]),t._v("           #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java/lang/System.out:Ljava/io/PrintStream;")]),t._v("\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fieldref")]),t._v("           #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Main.m:I")]),t._v("\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Methodref")]),t._v("          #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java/io/PrintStream.println:(I)V")]),t._v("\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v("              #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Main")]),t._v("\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v("              #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java/lang/Object")]),t._v("\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               m\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("I")]),t._v("\n   #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Code")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LineNumberTable")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               main\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ljava")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SourceFile")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameAndType")]),t._v("        #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "<init>":()V')]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v("              #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java/lang/System")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameAndType")]),t._v("        #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// out:Ljava/io/PrintStream;")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameAndType")]),t._v("        #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// m:I")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v("              #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java/io/PrintStream")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameAndType")]),t._v("        #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// println:(I)V")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               out\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ljava")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("io"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("io"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintStream")]),t._v("\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               println\n  #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Utf8")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("I")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    descriptor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v("\n    flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACC_PUBLIC")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Code")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      stack"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" locals"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" aload_0\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" invokespecial #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Method java/lang/Object."<init>":()V')]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LineNumberTable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    descriptor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ljava")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v("\n    flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0009")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACC_PUBLIC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACC_STATIC")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Code")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      stack"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" locals"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" getstatic     #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Field java/lang/System.out:Ljava/io/PrintStream;")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" getstatic     #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Field m:I")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" invokevirtual #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Method java/io/PrintStream.println:(I)V")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LineNumberTable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v('对于常量"I、V、<init>、LineNumberTable"等常量是编译器自动生成的，用于描述一些不方便用固定字节进行表达的内容')])])])])]),t._v(" "),s("h3",{attrs:{id:"访问标志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问标志"}},[t._v("#")]),t._v(" 访问标志")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("常量池结束后，紧接着的2个字节表示访问标志(Access Flag)")])]),t._v(" "),s("li",[s("p",[t._v("访问标志用于识别一些类或接口层次的访问信息，如Class是类还是接口，是否是public修饰、是否是abstract等")])]),t._v(" "),s("li",[s("p",[t._v("访问标志含义：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423105632523.png",alt:"image-20210423105632523"}})])]),t._v(" "),s("li",[s("p",[t._v("假设有ACC_PUBLIC和ACC_SUPER，则访问标志位的值应为0x0001|0x0020 = 0x0021")])])]),t._v(" "),s("h3",{attrs:{id:"类索引、父类索引、接口索引集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类索引、父类索引、接口索引集合"}},[t._v("#")]),t._v(" 类索引、父类索引、接口索引集合")]),t._v(" "),s("ul",[s("li",[t._v("类索引(this_class)和父类索引(super_class)都是u2类型的数据，而接口索引集合(interfaces)是一组u2类型的数据集合(接口可以实习多个，类仅能继承一个)")]),t._v(" "),s("li",[t._v("此三个索引按顺排列在访问标志之后。对于前二者，u2数据中存放了指向一个CONSTANT_Class_info的索引值")]),t._v(" "),s("li",[t._v("而接口索引集合多一个接口计数器(interfaces_count)表示容量，后续每一个u2索引一个接口信息")])]),t._v(" "),s("h3",{attrs:{id:"字段表集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段表集合"}},[t._v("#")]),t._v(" 字段表集合")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("字段表(field_info)用于描述类或接口中声明的变量。包含类级别变量和实例级别，但不包含方法中声明的局部变量")])]),t._v(" "),s("li",[s("p",[t._v("字段表结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423111937188.png",alt:"image-20210423111937188"}})])]),t._v(" "),s("li",[s("p",[t._v("字段访问标志")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423112016094.png",alt:"image-20210423112016094"}})])]),t._v(" "),s("li",[s("p",[t._v("访问标志之后是两项索引：name_index和descriptor_index，都是对常量池的索引，一个为简单名称，一个为方法描述符")])]),t._v(" "),s("li",[s("p",[t._v("简单名称、全限定名、描述符的区别：")]),t._v(" "),s("ul",[s("li",[t._v("全限定名即包含包名的完整名称，如"),s("code",[t._v("org.example.Main")])]),t._v(" "),s("li",[t._v("简单名称即方法、变量等的字面名称，如函数f()，变量 int k，其简单名称为 f、k")]),t._v(" "),s("li",[t._v("描述符的作用是描述字段数据类型、方法的返回值、参数列表等。根据规则，基本数据类型以及代表无返回值的void类型都用一个"),s("code",[t._v("大写字符表示")]),t._v("。而对象类型则用"),s("code",[t._v("L+对象全限定名")]),t._v("表示")]),t._v(" "),s("li",[t._v("对于数组，每一维度将使用一个前置"),s("code",[t._v("[")]),t._v("来描述，如"),s("code",[t._v("java.lang.String[][]")]),t._v("描述为"),s("code",[t._v("[[Ljava.lang.String")]),t._v(".而"),s("code",[t._v("int[]")]),t._v(" 被描述为"),s("code",[t._v("[I")])]),t._v(" "),s("li",[t._v("当用描述符描述方法时，按"),s("strong",[t._v("先参数列表后返回值")]),t._v("的顺序，如"),s("code",[t._v("void inc()")]),t._v("描述为"),s("code",[t._v("()V")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423112848424.png",alt:"image-20210423112848424"}})])])]),t._v(" "),s("h3",{attrs:{id:"方法表集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法表集合"}},[t._v("#")]),t._v(" 方法表集合")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Class文件对方法的描述和字段几乎相同。")])]),t._v(" "),s("li",[s("p",[t._v("方法表结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423194635888.png",alt:"image-20210423194635888"}})])]),t._v(" "),s("li",[s("p",[t._v("方法访问标志")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423194706450.png",alt:"image-20210423194706450"}})])]),t._v(" "),s("li",[s("p",[t._v("对于方法中的Java代码，经过javac 编译后，存放在"),s("strong",[t._v("方法属性表集合")]),t._v("中一个名为"),s("code",[t._v("Code")]),t._v("的属性中")])]),t._v(" "),s("li",[s("p",[t._v("方法表实例")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423195156673.png",alt:"image-20210423195156673"}})])])]),t._v(" "),s("h3",{attrs:{id:"属性表集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性表集合"}},[t._v("#")]),t._v(" 属性表集合")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("与Class文件中其他的数据项要求严格的顺序、长度和内容不同，属性表不要求具有严格顺序")])]),t._v(" "),s("li",[s("p",[t._v("虚拟机规范预定义的属性")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423195643553.png",alt:"image-20210423195643553"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423195701743.png",alt:"image-20210423195701743"}})])]),t._v(" "),s("li",[s("p",[t._v("对于每个属性，都需要从常量池中引用一个CONSTANT_Utf-8_info类型的常量来表示")])]),t._v(" "),s("li",[s("p",[t._v("符合规则的属性表结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423200142933.png",alt:"image-20210423200142933"}})])])]),t._v(" "),s("h2",{attrs:{id:"字节码指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节码指令"}},[t._v("#")]),t._v(" 字节码指令")]),t._v(" "),s("ul",[s("li",[t._v("Java虚拟机的指令由一个"),s("strong",[t._v("1字节长")]),t._v("、代表着某种特定操作含义的数字(称为操作码，Opcode)，以及跟随其后的0个或多个代表此操作的参数(操作数，Operand)构成")]),t._v(" "),s("li",[t._v("因为Java虚拟机采用面向"),s("strong",[t._v("操作数栈")]),t._v("而不是"),s("strong",[t._v("寄存器")]),t._v("的架构，所以大多数指令都不包含操作数，仅有一个操作码，指令参数都在操作数栈中")])]),t._v(" "),s("h3",{attrs:{id:"字节码与数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节码与数据类型"}},[t._v("#")]),t._v(" 字节码与数据类型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Java虚拟机指令中，大多数都包含了其操作数对应的数据类型，如"),s("code",[t._v("iload")]),t._v("和"),s("code",[t._v("fload")]),t._v("分别表示从局部变量表中加载int/float型的数据到操作数栈中")])]),t._v(" "),s("li",[s("p",[t._v("对于大多数与数据类型相关的字节码指令，其操作码助记符中都有特殊字符来表示数据类型。如i表示int，l表示long，s表示short，b代表byte，c代表char，a代表reference")])]),t._v(" "),s("li",[s("p",[t._v("Java虚拟机支持的指令数据类型表(T表示模板，可取int、long等)")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423203656966.png",alt:"image-20210423203656966"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210423203710314.png",alt:"image-20210423203710314"}})])])]),t._v(" "),s("h3",{attrs:{id:"加载和存储指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载和存储指令"}},[t._v("#")]),t._v(" 加载和存储指令")]),t._v(" "),s("ul",[s("li",[t._v("加载和存储指令用于将数据在帧栈中的"),s("strong",[t._v("局部变量表")]),t._v("和"),s("strong",[t._v("操作数栈")]),t._v("间来回传输")]),t._v(" "),s("li",[t._v("分类：\n"),s("ul",[s("li",[t._v("局部变量加载到操作数栈：iload、iload_<n>........")]),t._v(" "),s("li",[t._v("将数值从操作数栈存在局部变量表：istore、istore_<n>.......")]),t._v(" "),s("li",[t._v("将常量加载到操作数栈：bipush、sipush、ldc、ldc_w、ldc2_w、aconst_null、iconst_<i>.........")]),t._v(" "),s("li",[t._v("扩充局部变量表的访问索引指令：wide")])])]),t._v(" "),s("li",[t._v("除了加载和存储指令，还有少量指令如访问对象字段或数值元素也会向操作数栈传输数据")])]),t._v(" "),s("h3",{attrs:{id:"运算指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算指令"}},[t._v("#")]),t._v(" 运算指令")]),t._v(" "),s("ul",[s("li",[t._v("算术指令用于对两个操作数栈上的值进行某种特定运算，并把结果重新存到操作数栈顶")]),t._v(" "),s("li",[t._v("==不存在直接支持byte、short、boolean类型的算术指令，应该使用操作int类型的指令代替==")]),t._v(" "),s("li",[t._v("算术指令包含加减乘除、求余取反、按位与或异或、位移、自增、比较等")])]),t._v(" "),s("h3",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),s("ul",[s("li",[t._v("类型转换指令可以将两种不同数值类型进行转换，一般用于实现用户代码中的显示类型转换。")]),t._v(" "),s("li",[t._v("也可用于处理字节码指令集中的数据类型相关指令无法与数据类型一一对应的问题")]),t._v(" "),s("li",[t._v("Java虚拟机直接支持以下数值类型的"),s("strong",[t._v("宽化转换")]),t._v("(无需显式转换指令)\n"),s("ul",[s("li",[t._v("int到long、float、double")]),t._v(" "),s("li",[t._v("long到float、double")]),t._v(" "),s("li",[t._v("float到都变了")])])]),t._v(" "),s("li",[t._v("处理窄化转换时，需要对应的指令，包括：i2b、i2c、i2s、l2i、f2i、d2i、d2f、d2l")])]),t._v(" "),s("h3",{attrs:{id:"对象创建与访问指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象创建与访问指令"}},[t._v("#")]),t._v(" 对象创建与访问指令")]),t._v(" "),s("ul",[s("li",[t._v("实例和数组都是对象，但Java对实例和数组的创建使用了不同的字节码指令")]),t._v(" "),s("li",[t._v("创建类实例的指令：new")]),t._v(" "),s("li",[t._v("创建数组的指令：newarray、anewarray、multianewarray")]),t._v(" "),s("li",[t._v("访问类字段和实例字段的指令：getfield、putfield、getstatic、putstatic")]),t._v(" "),s("li",[t._v("将数组元素加载到操作数栈：baload、caload、sastore、iastore.......")]),t._v(" "),s("li",[t._v("求数组长度：arraylength")]),t._v(" "),s("li",[t._v("检查类实例：instanceof、checkcast")])]),t._v(" "),s("h3",{attrs:{id:"操作数栈管理指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作数栈管理指令"}},[t._v("#")]),t._v(" 操作数栈管理指令")]),t._v(" "),s("ul",[s("li",[t._v("类似处理普通的数据栈，可直接对操作数栈进行压入与弹出操作")]),t._v(" "),s("li",[t._v("将操作数栈栈顶的一个或两个元素出栈：pop、pop2")]),t._v(" "),s("li",[t._v("复制栈顶一个或两个数值并将复制的值或双份的复制值(压入两次相同值)重新压入栈顶：dup、dup2、dup_x1、dup2_x1、dup_x2、dup2_x2")]),t._v(" "),s("li",[t._v("交换栈顶最顶端的两个值：swap")])]),t._v(" "),s("h3",{attrs:{id:"控制转移指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制转移指令"}},[t._v("#")]),t._v(" 控制转移指令")]),t._v(" "),s("ul",[s("li",[t._v("控制转移指令可以让虚拟机有条件或无条件地从指令指定位置的"),s("strong",[t._v("下一条")]),t._v("指令继续执行")]),t._v(" "),s("li",[t._v("控制转移指令包括：\n"),s("ul",[s("li",[t._v("条件分支：ifeq、iflt、ifnull........")]),t._v(" "),s("li",[t._v("复合条件分支：tableswitch、lookupswitch")]),t._v(" "),s("li",[t._v("无条件分支：goto、goto_w、jsr、ret")])])])]),t._v(" "),s("h3",{attrs:{id:"方法调用与返回指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用与返回指令"}},[t._v("#")]),t._v(" 方法调用与返回指令")]),t._v(" "),s("ul",[s("li",[t._v("invokevirtual：用于调用对象的实例方法，根据对象的实际类型进行分派。最常见的分派方式")]),t._v(" "),s("li",[t._v("invokeinterface：用于调用接口方法，会在运行时搜索实现该接口的对象找出合适的方法进行调用")]),t._v(" "),s("li",[t._v("invokespecial：用于调用一些需要特殊处理的方法，如实例初始化方法、私有方法、父类方法")]),t._v(" "),s("li",[t._v("invokestatic：用于调用类静态方法")]),t._v(" "),s("li",[t._v("invokedynamic：用于在运行时动态解析出调用点限定符所引用的方法并执行")]),t._v(" "),s("li",[t._v("方法调用指令与数据类型无关，而返回类型与数据类型相关，包括ireturn(int以及位数小于int的，如byte等)、lreturn、freturn、areturn....，特殊地，return用于返回为void的情况")])]),t._v(" "),s("h3",{attrs:{id:"同步指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步指令"}},[t._v("#")]),t._v(" 同步指令")]),t._v(" "),s("ul",[s("li",[t._v("Java虚拟机支持方法级的同步和方法内部一段指令序列的同步。两种类型的同步都是通过**管程(Monitor)**来实现")]),t._v(" "),s("li",[t._v("方法级的同步是隐式的，无需通过字节码实现。可通过方法表结构中的ACC_SYNCHRONIZED访问标志判断是否为同步方法")]),t._v(" "),s("li",[t._v("同步一段指令集通常在Java语言中可使用synchronized语句块实现，指令集中，有"),s("code",[t._v("monitorenter")]),t._v("和"),s("code",[t._v("monitorexit")]),t._v("两条指令支持")])]),t._v(" "),s("h2",{attrs:{id:"虚拟机类加载机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机类加载机制"}},[t._v("#")]),t._v(" 虚拟机类加载机制")]),t._v(" "),s("ul",[s("li",[t._v("Java虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、转换解析、初始化，最终形成可被虚拟机直接使用的Java类型，此过程即类加载机制")]),t._v(" "),s("li",[t._v("不同于C++等在编译时需要链接，Java的类加载、链接和初始化都是在运行时完成")])]),t._v(" "),s("h3",{attrs:{id:"类加载时机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载时机"}},[t._v("#")]),t._v(" 类加载时机")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("一个类型被加载到虚拟机内存，直到被卸载，整个生命周期会经历七个阶段：")]),t._v(" "),s("ul",[s("li",[t._v("加载(Loading)")]),t._v(" "),s("li",[t._v("验证(Verification)")]),t._v(" "),s("li",[t._v("准备(Preparation)")]),t._v(" "),s("li",[t._v("解析(Resolution)")]),t._v(" "),s("li",[t._v("初始化(Initialization)")]),t._v(" "),s("li",[t._v("使用(Using)")]),t._v(" "),s("li",[t._v("卸载(Unloading)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210424093426094.png",alt:"image-20210424093426094"}})])])]),t._v(" "),s("h3",{attrs:{id:"类加载过程-加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程-加载"}},[t._v("#")]),t._v(" 类加载过程——加载")]),t._v(" "),s("ul",[s("li",[t._v("加载阶段需要完成的三件事：\n"),s("ul",[s("li",[t._v("通过类的"),s("strong",[t._v("全限定名")]),t._v("来获取定义该类的二进制字节流")]),t._v(" "),s("li",[t._v("将此字节流定义的静态存储结构转换为方法区的运行时数据结构")]),t._v(" "),s("li",[t._v("在内存中生成一个代表该类的"),s("code",[t._v("java.lang.Class")]),t._v("对象，作为方法区该类的各种"),s("strong",[t._v("访问入口")])])])]),t._v(" "),s("li",[t._v("其中，获取二进制字节流并非必须从Class文件中获取，还可以指定从Zip文件、网络、运行时自动生成等方式灵活得到")]),t._v(" "),s("li",[t._v("加载阶段是开发者可控性最强的阶段，加载阶段既可以使用JVM内置的引导类加载器，也可使用用户自定义的加载器")]),t._v(" "),s("li",[t._v("开发者可通过自定义类加载器控制字节流的获取方式——通过重写一个类加载器的"),s("code",[t._v("findClass()")]),t._v("或"),s("code",[t._v("loadClass()")]),t._v("方法实现运行时代码动态性")]),t._v(" "),s("li",[t._v("对数组而言有所不同，"),s("strong",[t._v("数组本身不通过类加载机制创建")]),t._v("，而是由JVM直接在内存中动态构造。但数组元素类型需要依赖类加载")])]),t._v(" "),s("h3",{attrs:{id:"类加载过程-验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程-验证"}},[t._v("#")]),t._v(" 类加载过程——验证")]),t._v(" "),s("ul",[s("li",[t._v("验证时链接阶段的第一步，目的是确保Class文件中的字节流信息符合Java虚拟机规范的要求，保证将字节流当作代码运行后不会危害虚拟机安全")]),t._v(" "),s("li",[t._v("验证大致分为四种：\n"),s("ul",[s("li",[t._v("文件格式验证：检验Class文件是否符合格式规范，能否被当前版本的虚拟机处理等")]),t._v(" "),s("li",[t._v("元数据验证：对字节码描述的信息进行语义分析，看是否符合要求。如类是否继承、是否继承了不能被继承的类等")]),t._v(" "),s("li",[t._v("字节码验证：通过数据流和控制流分析，确定程序语义是否合法、符合逻辑")]),t._v(" "),s("li",[t._v("符号引用验证：发生在虚拟机将符号引用转换为直接引用时，通常此动作发生在解析阶段。")])])]),t._v(" "),s("li",[t._v("验证阶段是重要但非必须的阶段，可通过"),s("code",[t._v("-Xverify:none")]),t._v("关闭验证")])]),t._v(" "),s("h3",{attrs:{id:"类加载过程-准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程-准备"}},[t._v("#")]),t._v(" 类加载过程——准备")]),t._v(" "),s("ul",[s("li",[t._v("准备阶段是正式为**类中的变量(静态变量，不包括实例变量)**分配内存并设置初始值的阶段")]),t._v(" "),s("li",[t._v("准备阶段对静态变量的初始值都是变量类型对应的零值")])]),t._v(" "),s("h3",{attrs:{id:"类加载过程-解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程-解析"}},[t._v("#")]),t._v(" 类加载过程——解析")]),t._v(" "),s("ul",[s("li",[t._v("解析阶段是将常量池中的"),s("strong",[t._v("符号引用转换为直接引用")]),t._v("的过程")]),t._v(" "),s("li",[t._v("符号引用(Symbolic References)：用一组符号来描述引用的目标，符号引用可以是任何形式的字面量")]),t._v(" "),s("li",[t._v("直接引用(Direct References)：直接引用是可以直接指向目标的指针、相对偏移量或一个能间接定位到目标的句柄")])]),t._v(" "),s("h3",{attrs:{id:"类加载过程-初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载过程-初始化"}},[t._v("#")]),t._v(" 类加载过程——初始化")]),t._v(" "),s("ul",[s("li",[t._v("类的初始化是类加载的最后一个阶段，直到初始化阶段，Java虚拟机才真正开始执行类中编译的Java代码，将主导权交给程序")]),t._v(" "),s("li",[t._v("初始化阶段可以看作执行类构造器"),s("code",[t._v("<clinit>()")]),t._v("方法的过程，"),s("code",[t._v("<clinit>()")]),t._v("是javac编译自动生成的，而非Java代码")]),t._v(" "),s("li",[s("code",[t._v("<clinit>()")]),t._v("是编译器自动收集类中所有类变量(静态变量)的赋值动作和静态语句块(static{}块)中的语句构成")]),t._v(" "),s("li",[s("code",[t._v("<clinit>()")]),t._v("与类的构造函数(虚拟机中的"),s("code",[t._v("<init>()")]),t._v("构造器)不同，其不用显式调用父类构造器")]),t._v(" "),s("li",[t._v("父类中的"),s("code",[t._v("<clinit>()")]),t._v("肯定在子类之前执行，所以父类的static{}语句块在子类的static{}之前执行")]),t._v(" "),s("li",[s("code",[t._v("<clinit>()")]),t._v("对于接口(接口不能定义静态块)或类来说不是必须的，当没有静态变量或静态语句块时可能不会生成")]),t._v(" "),s("li",[t._v("Java虚拟机必须保证"),s("code",[t._v("<clinit>()")]),t._v("方法在多线程访问下被正确加锁同步")])]),t._v(" "),s("h3",{attrs:{id:"类与类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类与类加载器"}},[t._v("#")]),t._v(" 类与类加载器")]),t._v(" "),s("ul",[s("li",[t._v("对于任意一个类，都必须由加载它的类加载器和这个类本身共同确立其在Java虚拟机中的唯一性")]),t._v(" "),s("li",[t._v("每个类加载器都有一个独立的类名称空间")]),t._v(" "),s("li",[t._v("==对于同一个Class文件，由不同的类加载器加载得到的类型是不相同的==，因此在使用equals、instanceof等操作时得到的结果都是false")])]),t._v(" "),s("h3",{attrs:{id:"双亲委派模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派模型"}},[t._v("#")]),t._v(" 双亲委派模型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在Java虚拟机的角度看只有两种类加载器")]),t._v(" "),s("ul",[s("li",[t._v("启动类加载器(Bootstrap ClassLoader)：由C++实现，虚拟机自身的一部分")]),t._v(" "),s("li",[t._v("其他所有类加载器：由Java实现，独立于虚拟机外部，全部继承自抽象类"),s("code",[t._v("java.lang.ClassLoader")])])])]),t._v(" "),s("li",[s("p",[t._v("Java8及以前的"),s("strong",[t._v("三层类加载器")])]),t._v(" "),s("ul",[s("li",[t._v("启动类加载器(Bootstrap ClassLoader)：负责加载存放在"),s("code",[t._v("JAVA_HOME/lib")]),t._v("目录或被"),s("code",[t._v("-Xbootclasspath")]),t._v("参数指定的存放路径中的并且能被识别的类库加载到虚拟机内存")]),t._v(" "),s("li",[t._v("扩展类加载器(Extension ClassLoader)：在类sun.misc.Launcher$ExtClassLoader中以Java代码的形式实现。负责加载"),s("code",[t._v("JAVA_HOME/lib/ext")]),t._v("目录中或被"),s("code",[t._v("java.ext.dirs")]),t._v("系统变量指定的路径中的类库。因为由Java代码实现，因此可直接被开发者使用")]),t._v(" "),s("li",[t._v("应用程序类加载器(Application ClassLoader)：在sun.misc.Launcher$AppClassLoader中实现。该加载器是"),s("code",[t._v("ClassLoader")]),t._v("类中"),s("code",[t._v("getSystemClassLoader()")]),t._v("方法的返回值，因此也称为“系统类加载器”。负责加载用于类路径(classpath)上的类库")])])]),t._v(" "),s("li",[s("p",[t._v("Java9之前的类加载双亲委派模型")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210424105833736.png",alt:"image-20210424105833736"}})])]),t._v(" "),s("li",[s("p",[t._v("双亲委派模型的工作过程：")]),t._v(" "),s("ul",[s("li",[t._v("一个类收到一个类加载请求，通常不先自己加载，而是委派给父类(通常不是继承，而是组合)加载器")]),t._v(" "),s("li",[t._v("当父类反馈无法加载时，子类才会自己去加载")])])]),t._v(" "),s("li",[s("p",[t._v("双亲委派模型可以保证Java程序的稳定性，因为不同类加载器加载的类被视作不同类型，双亲委派模型总是优先将类加载委派给父类，所以可以很好地处理这种问题")])])]),t._v(" "),s("h3",{attrs:{id:"java模块化系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java模块化系统"}},[t._v("#")]),t._v(" Java模块化系统")]),t._v(" "),s("ul",[s("li",[t._v("JDK9中引入的Java模块化系统(Java Platform Module System,JPMS)实现了模块化的目标——可配置的封装隔离机制")]),t._v(" "),s("li",[t._v("Java模块定义包含内容：\n"),s("ul",[s("li",[t._v("依赖其他模块的列表")]),t._v(" "),s("li",[t._v("导出的包列表——其他模块可使用的包列表")]),t._v(" "),s("li",[t._v("开放的包列表——其他模块可以反射访问的包列表")]),t._v(" "),s("li",[t._v("使用的服务列表")]),t._v(" "),s("li",[t._v("提供服务的实现列表")])])])]),t._v(" "),s("h3",{attrs:{id:"模块的兼容性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块的兼容性"}},[t._v("#")]),t._v(" 模块的兼容性")]),t._v(" "),s("ul",[s("li",[t._v("为了使可配置封装隔离机制兼容传统的类路径查找机制，JDK9提出了与类路径(classpath)对应的模块路径(modulepath)")]),t._v(" "),s("li",[t._v("某个类库是模块还是jar包，仅取决于它放在哪种路径上")])]),t._v(" "),s("h3",{attrs:{id:"模块化下的类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化下的类加载器"}},[t._v("#")]),t._v(" 模块化下的类加载器")]),t._v(" "),s("ul",[s("li",[t._v("扩展类加载器被平台类加载器(Platform ClassLoader)取代：原来的rt.jar和tools.jar被拆分为多个JMOD文件")]),t._v(" "),s("li",[t._v("平台类加载器和应用程序类加载器都不再派生自"),s("code",[t._v("java.net.URLClassLoader")])]),t._v(" "),s("li",[t._v("启动类加载器、平台类加载器、应用程序类加载器都派生自"),s("code",[t._v("jdk.internal.loader.BuildinClassLoader")])])]),t._v(" "),s("h2",{attrs:{id:"虚拟机字节码执行引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机字节码执行引擎"}},[t._v("#")]),t._v(" 虚拟机字节码执行引擎")]),t._v(" "),s("h3",{attrs:{id:"运行时栈帧结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时栈帧结构"}},[t._v("#")]),t._v(" 运行时栈帧结构")]),t._v(" "),s("ul",[s("li",[t._v("Java虚拟机以“方法”为最基本的执行单元。"),s("strong",[t._v("栈帧")]),t._v("是用于支持JVM进行方法调用和执行的背后数据结构")]),t._v(" "),s("li",[t._v("栈帧是虚拟机运行时数据区中"),s("strong",[t._v("虚拟机栈")]),t._v("中的元素")]),t._v(" "),s("li",[t._v("栈帧主要存储以下信息\n"),s("ul",[s("li",[t._v("局部变量表")]),t._v(" "),s("li",[t._v("操作数栈")]),t._v(" "),s("li",[t._v("动态链接")]),t._v(" "),s("li",[t._v("方法返回地址等")])])]),t._v(" "),s("li",[t._v("在编译Java代码时，栈帧中需要多大的局部变量表、多深的操作数栈等已经被计算出来，并写入方法表的"),s("strong",[t._v("Code")]),t._v("属性中。所以栈帧需要分配多少内存在编译时就定了")])]),t._v(" "),s("h3",{attrs:{id:"栈帧之局部变量表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈帧之局部变量表"}},[t._v("#")]),t._v(" 栈帧之局部变量表")]),t._v(" "),s("ul",[s("li",[t._v("局部变量表用于存储"),s("strong",[t._v("方法参数")]),t._v("和方法内部定义的"),s("strong",[t._v("局部变量")]),t._v("。在编译为Class文件时，就在方法表的Code属性的max_locals确定了最大容量")]),t._v(" "),s("li",[t._v("局部变量表的容量以**变量槽(Variable Slot)**为单位，该单位没有规定所占位数大小，但规定了能够存储基本类型和引用类型。可以存储32位以内的数据")]),t._v(" "),s("li",[t._v("对64位的数据，如long和double，占用两个变量槽")]),t._v(" "),s("li",[t._v("当一个方法被调用时，JVM会使用局部变量表来完成"),s("strong",[t._v("实参到形参")]),t._v("的传递")]),t._v(" "),s("li",[t._v("当执行的是实例方法时(非static)，局部变量表的第 0 个槽默认用于传递方法所属对象的引用，即"),s("strong",[t._v("this")])]),t._v(" "),s("li",[t._v("为了尽可能节省内存，局部变量表的槽是可复用的。当超过变量的作用域时，该槽就可能被其他变量复用")]),t._v(" "),s("li",[t._v("局部变量不像类变量那样存在准备阶段(即初始化赋零值)，对于"),s("strong",[t._v("定义但未赋值的局部变量是不能使用的")])])]),t._v(" "),s("h3",{attrs:{id:"栈帧之操作数栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈帧之操作数栈"}},[t._v("#")]),t._v(" 栈帧之操作数栈")]),t._v(" "),s("ul",[s("li",[t._v("操作数栈是一个LIFO(后进先出)栈，栈中的每个元素都可以是任意Java类型")]),t._v(" "),s("li",[t._v("对于32位数据，占据栈容量为1，64为数据占栈容量为 2")]),t._v(" "),s("li",[t._v("以整数加法指令(iadd)为例说明栈操作：\n"),s("ul",[s("li",[t._v("执行该指令时要求栈中最接近栈顶的两个元素已经存入两个int类型值")]),t._v(" "),s("li",[t._v("执行此指令会将两个int值出栈并相加，然后将结果入栈")])])])]),t._v(" "),s("h3",{attrs:{id:"栈帧之动态链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈帧之动态链接"}},[t._v("#")]),t._v(" 栈帧之动态链接")]),t._v(" "),s("ul",[s("li",[t._v("每个栈帧都包含一个指向运行时常量池中该栈帧所属方法的引用，持有此引用即为了支持动态链接")])]),t._v(" "),s("h3",{attrs:{id:"栈帧之方法返回地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈帧之方法返回地址"}},[t._v("#")]),t._v(" 栈帧之方法返回地址")]),t._v(" "),s("ul",[s("li",[t._v("方法退出的过程实际上等于栈帧出栈的过程")]),t._v(" "),s("li",[t._v("退出时可能执行的操作有：\n"),s("ul",[s("li",[t._v("恢复上层方法的局部变量表和操作数栈")]),t._v(" "),s("li",[t._v("把返回值压入调用者的操作数栈")]),t._v(" "),s("li",[t._v("调整PC计数器")])])])]),t._v(" "),s("h3",{attrs:{id:"栈帧之附加信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈帧之附加信息"}},[t._v("#")]),t._v(" 栈帧之附加信息")]),t._v(" "),s("ul",[s("li",[t._v("可附加如调试、性能收集信息等附加信息")])]),t._v(" "),s("h3",{attrs:{id:"方法调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用"}},[t._v("#")]),t._v(" 方法调用")]),t._v(" "),s("ul",[s("li",[t._v("方法调用阶段的唯一任务就是确定要调用哪个方法，而不涉及具体的方法内部代码执行")])]),t._v(" "),s("h3",{attrs:{id:"方法调用-解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用-解析"}},[t._v("#")]),t._v(" 方法调用——解析")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("所有方法调用的目标方法在Class文件中表现为常量池中的"),s("strong",[t._v("符号引用")])])]),t._v(" "),s("li",[s("p",[t._v("在类加载阶段，会将一些符号引用转换为直接引用(Q:动态链接需要等到运行时？)")])]),t._v(" "),s("li",[s("p",[t._v("调用目标在程序代码写好，编译器进行编译时就确定下来这类方法的调用称为"),s("strong",[t._v("解析(Resolution)")])])]),t._v(" "),s("li",[s("p",[t._v("解析主要包含两类方法：")]),t._v(" "),s("ul",[s("li",[t._v("静态方法：直接与类关联，不会被重写")]),t._v(" "),s("li",[t._v("私有方法：外部类无法访问，也不会被重写")])])]),t._v(" "),s("li",[s("p",[t._v("Java虚拟机支持 5 条方法调用字节码指令：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("invokestatic")]),t._v(" "),s("td",[t._v("用于调用静态方法")])]),t._v(" "),s("tr",[s("td",[t._v("invokespecial")]),t._v(" "),s("td",[t._v("用于调用实例构造器<init>()方法、私有方法、父类方法")])]),t._v(" "),s("tr",[s("td",[t._v("invokevirtual")]),t._v(" "),s("td",[t._v("用于调用所有虚方法")])]),t._v(" "),s("tr",[s("td",[t._v("invokeinterface")]),t._v(" "),s("td",[t._v("用于调用接口方法")])]),t._v(" "),s("tr",[s("td",[t._v("invokedynamic")]),t._v(" "),s("td",[t._v("先在运行时动态解析出调用点限定符引用的方法，然后执行该方法")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("前四条指令的 分派 逻辑都固化在JVM中，最后一条的分派逻辑由用户设定的引导方法来决定")])])]),t._v(" "),s("li",[s("p",[t._v("只要能使用"),s("code",[t._v("invokestatic")]),t._v("和"),s("code",[t._v("invokespecial")]),t._v("调用的方法都可以在解析阶段确定调用目标。符合这一条件的有静态方法、私有方法、实例构造器、父类方法。加上被final修饰的方法(使用"),s("code",[t._v("invokevirtual")]),t._v("调用)，可在类加载时解析为方法的直接引用。这5类方法称为"),s("strong",[t._v("非虚方法")]),t._v("，其他方法称为虚方法")])]),t._v(" "),s("li",[s("p",[t._v("解析调用是静态过程，在类加载阶段就确定了调用方法的直接地址")])])]),t._v(" "),s("h3",{attrs:{id:"方法调用-分派"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用-分派"}},[t._v("#")]),t._v(" 方法调用——分派")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("静态分派")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("静态分派与Java中的重载有关")])]),t._v(" "),s("li",[s("p",[t._v("实例代码")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticDispatch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Man")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" guy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello,guy!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Man")]),t._v(" guy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello,gentleman!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),t._v(" guy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello,lady!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编译时只知道 man 变量的静态类型是Human，而不知道运行时类型是 Man")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因此调用时调用以静态类型确定的重载函数中参数为Human类型的那个函数")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" man "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Man")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" woman "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticDispatch")]),t._v(" sr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticDispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出都是 hello,guy")]),t._v("\n        sr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("man"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        sr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("woman"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("前置定义：")])]),t._v(" "),s("blockquote",[s("p",[t._v("在上述代码中")]),t._v(" "),s("p",[t._v("Human被称为变量的"),s("strong",[t._v("静态类型(Static Type)")]),t._v("，也叫“外观类型(Apparent Type)”")]),t._v(" "),s("p",[t._v("Man被称为变量的"),s("strong",[t._v("实际类型(Actual Type)")]),t._v("，也叫“运行时类型(Runtime Type)”")]),t._v(" "),s("p",[t._v("变量的最终的静态类型在编译时是确定的、可知的；而实际类型在运行时才能确定，编译时并不知道具体是什么类型")])]),t._v(" "),s("ul",[s("li",[t._v("虚拟机在决定"),s("strong",[t._v("采用哪个重载函数版本")]),t._v("的时候，取决于传入参数的"),s("strong",[t._v("数量和类型")]),t._v("，而对于类型的判断，编译时使用的是"),s("strong",[t._v("静态类型")])]),t._v(" "),s("li",[t._v("当没有静态类型相同的重载版本时，JVM会在类型安全的情况下进行转型并寻找合适的其他版本")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("动态分派")])]),t._v(" "),s("ul",[s("li",[t._v("动态分派与Java中的多态特性相关")]),t._v(" "),s("li",[t._v("实例代码")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DynamicDispatch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Man")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"man say hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"woman say hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" man "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Man")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Human")]),t._v(" woman "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//典型的多态特性的体现")]),t._v("\n        man"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//man say hello")]),t._v("\n        woman"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//woman say hello")]),t._v("\n        man "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Woman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//woman say hello")]),t._v("\n        man"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("调用函数的字节码指令")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("aload_1\ninvokevirtual #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Method DynamicDispatch$Human.sayHello:()V")]),t._v("\naload_2\ninvokevirtual #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Method DynamicDispatch$Human.sayHello:()V")]),t._v("\n")])])]),s("ul",[s("li",[t._v("从字节码指令可见，无论是指令还是参数都相同，因此推断出多态的关键是"),s("code",[t._v("invokevirtual")]),t._v("指令本身而非字节码参数")]),t._v(" "),s("li",[s("code",[t._v("invokevirtual")]),t._v("指令的运行时解析大概步骤：\n"),s("ul",[s("li",[t._v("找到操作数栈顶的第一个元素指向的对象"),s("strong",[t._v("实际类型 C")])]),t._v(" "),s("li",[t._v("若在C中找到常量描述符和简单名称都相符的方法，则进行访问权限校验，通过则返回方法的直接引用，否则抛IllegalAccessError异常")]),t._v(" "),s("li",[t._v("否则，按继承关系从下往上对父类进行搜索和校验")]),t._v(" "),s("li",[t._v("若最终无结果，则抛出AbstractMethodError异常")])])]),t._v(" "),s("li",[t._v("==注意：字段不参与多态==")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FieldHasNoPolymorphic")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showMeTheMoney")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showMeTheMoney")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am Father, i have $"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showMeTheMoney")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重写了父类中的 showMeTheMoney()，可以表现多态性质")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showMeTheMoney")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am Son, i have $"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" gay "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This gay has $"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" gay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n输出：\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造Son时先调用父类的构造函数(此时的this指向是Son类实例)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//而父类构造函数中showMeTheMoney具有多态性质")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因此会调用子类的showMeTheMoney函数，为 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0值是类加载准备阶段(初始化前)默认的值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("I")]),t._v(" am "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i have $ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//而后调用子类的构造函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("I")]),t._v(" am "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i have $ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字段不参与多态，因此用静态类型Father访问父类直接得到字段值为 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("This")]),t._v(" guy has $ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("单分派与多分派")])]),t._v(" "),s("ul",[s("li",[t._v("方法的接收者与方法的参数统称为方法的"),s("strong",[t._v("宗量")])]),t._v(" "),s("li",[t._v("根据分派基于多少宗量，分为单分派与多分派")]),t._v(" "),s("li",[t._v("目前的Java是"),s("strong",[t._v("静态多分派，动态单分派的语言")])])])])]),t._v(" "),s("h3",{attrs:{id:"动态类型语言支持-动态类型语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态类型语言支持-动态类型语言"}},[t._v("#")]),t._v(" 动态类型语言支持——动态类型语言")]),t._v(" "),s("ul",[s("li",[t._v("动态类型语言关键特征是其"),s("strong",[t._v("类型检查的主体过程")]),t._v("发生在"),s("strong",[t._v("运行时而不是编译时")])]),t._v(" "),s("li",[t._v("动态类型语言还有一个核心："),s("strong",[t._v("变量无类型而变量值才有类型")])])]),t._v(" "),s("h3",{attrs:{id:"java与动态类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java与动态类型"}},[t._v("#")]),t._v(" Java与动态类型")]),t._v(" "),s("ul",[s("li",[t._v("JDK以前需要通过比较复杂的动态类型支持，而JDK7中新增的"),s("code",[t._v("invokedynamic")]),t._v("指令以及"),s("code",[t._v("java.lang.invoke")]),t._v("包的出现使得虚拟机可以在底层直接支持动态类型")])]),t._v(" "),s("h3",{attrs:{id:"java-lang-invoke包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-lang-invoke包"}},[t._v("#")]),t._v(" java.lang.invoke包")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("此包的主要目的是在此前的"),s("strong",[t._v("单纯靠符号引用")]),t._v("来确定调用的目标方法外，提供一种"),s("strong",[t._v("动态确定")]),t._v("调用目标方法的机制，称为"),s("strong",[t._v("方法句柄(Method Handle)")])])]),t._v(" "),s("li",[s("p",[t._v("有方法句柄之后，Java可以实现类似C++的函数指针的一些效果")])]),t._v(" "),s("li",[s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodHandleTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无论obj最终是哪个实现类，下面这句都能正确调用到println方法。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrintlnMH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeExact")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"icyfenix"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//模拟 invokevirtual 指令，不过分派方式不同")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodHandle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrintlnMH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" reveiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MethodType：代表“方法类型”，包含了方法的返回值（methodType()的第一个参数）和")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//具体参数（methodType()第二个及以后的参数）。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodType")]),t._v(" mt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lookup()方法来自于MethodHandles.lookup，这句的作用是在指定类中查找符合给定的方法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//名称、方法类型，并且符合调用权限的方法句柄。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为这里调用的是一个虚方法，按照Java语言的规则，方法第一个参数是隐式的，代表该方法的接")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//收者，也即this指向的对象，这个参数以前是放在参数列表中进行传递，现在提供了bindTo()")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法来完成这件事情。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findVirtual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reveiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"println"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bindTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reveiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("上述代码可以使用反射机制完成。二者关系为：")]),t._v(" "),s("ul",[s("li",[t._v("Reflection和MethodHandle机制本质上都是在模拟方法调用，但是Reflection是在模拟Java代码层次的方法调用，而MethodHandle是在模拟字节码层次的方法调用。")]),t._v(" "),s("li",[t._v("·Reflection中的java.lang.reflect.Method对象远比MethodHandle机制中的java.lang.invoke.MethodHandle对象所包含的信息来得多")]),t._v(" "),s("li",[t._v("用开发人员通俗的话来讲，Reflection是重量级，而MethodHandle是轻量级")])])])]),t._v(" "),s("h3",{attrs:{id:"invokedynamic指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#invokedynamic指令"}},[t._v("#")]),t._v(" invokedynamic指令")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("invokedynamic")]),t._v("的与"),s("code",[t._v("MethodHandle")]),t._v("作用类似，都用于完成”动态分派“。但前者是基于字节码，后者是基于上层API的")]),t._v(" "),s("li",[t._v("每一个含有"),s("code",[t._v("invokedynamic")]),t._v("指令的位置称为"),s("strong",[t._v("动态调用点")]),t._v("，该指令第一个参数不再是代表方法符号引用的CONSTANT_Methodref_info常量，而是CONSTANT_InvokeDynamic_info常量，从该常量可得到3个信息：\n"),s("ul",[s("li",[t._v("引导方法：固定参数，返回值规定是"),s("code",[t._v("java.lang.invoke.CallSite")]),t._v("对象，代表了真正要执行的目标方法调用")]),t._v(" "),s("li",[t._v("方法类型")]),t._v(" "),s("li",[t._v("方法名称")])])])]),t._v(" "),s("h3",{attrs:{id:"基于栈的指令集与基于寄存器的指令集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于栈的指令集与基于寄存器的指令集"}},[t._v("#")]),t._v(" 基于栈的指令集与基于寄存器的指令集")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Javac编译器输出的字节码指令流基本上都是基于栈的指令集架构(ISA)")])]),t._v(" "),s("li",[s("p",[t._v("与基于寄存器的指令集区别：以计算 1+1为例")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("基于栈的指令集：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//连续把两个常数压入栈")]),t._v("\niconst_1\niconst_1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把栈顶两个值出栈相加然后将结果压回")]),t._v("\niadd\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把栈顶值放到局部变量表的第 0 个槽中")]),t._v("\nistore_0\n")])])])]),t._v(" "),s("li",[s("p",[t._v("基于寄存器的指令集：")]),t._v(" "),s("div",{staticClass:"language-assembly extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mov eax,1\nadd eax,1\n")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"基于栈的解释器执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于栈的解释器执行过程"}},[t._v("#")]),t._v(" 基于栈的解释器执行过程")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("示例代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("对应字节码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Code")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stack=2表示需要一个深度为 2 的操作数栈空间")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// locals=4 表示需要一个有 4 个变量槽的局部变量空间")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Args_size=1 表示该方法有一个参数。(即作为对象的方法，有一个默认的 this 参数)")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Locals")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Args_size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  bipush "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bipush用于将单字节(-128——127)的整型常量入操作数栈。参数为要存的值")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  istore_1\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// istore_1 将操作数栈栈顶的元素出栈并存到第一个变量槽中(第0个存的是this)")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  sipush "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  istore_2\n             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  sipush "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  istore_3\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  iload_1\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// iload_1用于将局部变量表中的第1个槽中的整型值复制到操作数栈顶")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  iload_2\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  iadd\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// iadd用于弹出操作数栈顶的两个整型数相加并将结果压入栈")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  iload_3\t\t\t\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  imul\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// imul用于弹出栈顶两个数相乘并将结果压回")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  ireturn\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ireturn 将栈顶的整型数返回给方法调用者并结束方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("以上仅仅是概念模型。实际的虚拟机执行可能并不按照上述顺序执行，因为虚拟机可能会做出一些优化来提高性能")])])]),t._v(" "),s("h2",{attrs:{id:"类加载及执行子系统案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载及执行子系统案例"}},[t._v("#")]),t._v(" 类加载及执行子系统案例")]),t._v(" "),s("h3",{attrs:{id:"tomcat-正统的类加载器架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-正统的类加载器架构"}},[t._v("#")]),t._v(" Tomcat：正统的类加载器架构")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("主流的Web服务器一般都实现了自己的类加载器。因为功能健全的Web服务器需要解决以下问题：")]),t._v(" "),s("ul",[s("li",[t._v("部署在同一个服务器上的两个Web程序所使用的Java类库"),s("strong",[t._v("可以相互隔离")])]),t._v(" "),s("li",[t._v("部署在同一个服务器上的两个Web应用程序所使用的Java类库"),s("strong",[t._v("可以互相共享")])]),t._v(" "),s("li",[t._v("服务器需要尽可能地保证自身的安全不受部署的Web应用程序影响。服务器依赖的类库应该与程序依赖的类库隔离")])])]),t._v(" "),s("li",[s("p",[t._v("基于上述问题，许多Web服务器都提供了好几个有不同含义的"),s("strong",[t._v("ClassPath")]),t._v("供用户存放第三方库，路径一般用lib、classes命名")])]),t._v(" "),s("li",[s("p",[t._v("不同class path下的类库，具有不同的访问范围和服务对象，"),s("strong",[t._v("通常每个目录都有一个相应的自定义类加载器去加载类库")])])]),t._v(" "),s("li",[s("p",[t._v("以Tomcat6及以前目录结构为例：")]),t._v(" "),s("ul",[s("li",[t._v("放置在/common目录中。类库可被Tomcat和所有的Web应用程序共同使用。")]),t._v(" "),s("li",[t._v("放置在/server目录中。类库可被Tomcat使用，对所有的Web应用程序都不可见。")]),t._v(" "),s("li",[t._v("放置在/shared目录中。类库可被所有的Web应用程序共同使用，但对Tomcat自己不可见。")]),t._v(" "),s("li",[t._v("放置在/WebApp/WEB-INF目录中。类库仅仅可以被该Web应用程序使用，对Tomcat和其他Web应用程序都不可见。")])])]),t._v(" "),s("li",[s("p",[t._v("类加载模型——基于双亲委派")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210502101331061.png",alt:"image-20210502101331061"}})])])]),t._v(" "),s("h3",{attrs:{id:"osgi-灵活的类加载器架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#osgi-灵活的类加载器架构"}},[t._v("#")]),t._v(" OSGi：灵活的类加载器架构")]),t._v(" "),s("ul",[s("li",[t._v("OSGi(Open Service Gateway Initiative)是一个基于Java语言的动态模块化规范。")]),t._v(" "),s("li",[t._v("OSGi中的模块(称为Bundle)类似与Java中的类库，都以jar格式封装。但一个Bundle可以声明其所依赖的Package，也可以声明其可以导出生成的Package")]),t._v(" "),s("li",[t._v("OSGi中，传统的上层模块依赖底层模块转变为平级模块之间的依赖")]),t._v(" "),s("li",[t._v("类库的可见性可以通过OSGi得到精确的控制，一个模块中只有被Export过的Package才能被其他模块访问")]),t._v(" "),s("li",[t._v("目前，引入OSGi的理由主要是基于OSGi框架可以实现模块化的热插拔功能")]),t._v(" "),s("li",[t._v("OSGi的类加载器之间只有关联，没有固定的委派关系。如，某个Bundle声明了一个它依赖的Package，如果有其他Bundle声明了发布这个Package后，那么所有对这个Package的类加载动作都会委派给发布它的Bundle类加载器去完成。不涉及某个具体的Package时，各个Bundle加载器都是平级的关系，只有具体使用到某个Package和Class的时候，才会根据Package导入导出定义来构造Bundle间的委派和依赖。")])]),t._v(" "),s("h3",{attrs:{id:"字节码生成技术和动态代理实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节码生成技术和动态代理实现"}},[t._v("#")]),t._v(" 字节码生成技术和动态代理实现")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("动态代理中的动态，是针对使用Java代码实际编写了静态代理类而言的。优势在于"),s("strong",[t._v("实现了在原始类和接口还未知的时候就确定代理类的行为")]),t._v("，当代理类与原始类脱离关系后，就可以被其他场景重用")])]),t._v(" "),s("li",[s("p",[t._v("动态代理示例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DynamicProxyTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IHello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IHello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//动态代理")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DynamicProxy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InvocationHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" originalObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" originalObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originalObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" originalObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//newProxyInstance为重点，此方法返回一个实现了IHello的接口，并且代理了new Hello()实例行为的对象")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("originalObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" originalObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInterfaces")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// invoke 方法在调用被代理类的所有方法时都会被调用。因此invoke方法的执行逻辑某种程度上说就是")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 动态代理的逻辑")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"welcome"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("originalObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IHello")]),t._v(" hello "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DynamicProxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出：")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//welcome")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello world")]),t._v("\n        hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"backport工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backport工具"}},[t._v("#")]),t._v(" Backport工具")]),t._v(" "),s("ul",[s("li",[t._v("Java逆向移植工具(Java Backporting Tools)可以把高版本JDK编写的代码放到低版本JDK上运行")])]),t._v(" "),s("h3",{attrs:{id:"实战-远程执行功能实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战-远程执行功能实现"}},[t._v("#")]),t._v(" 实战：远程执行功能实现")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("即在服务端执行临时代码")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("目标：")])]),t._v(" "),s("ul",[s("li",[t._v("不依赖某个JDK版本才加入的特性")]),t._v(" "),s("li",[t._v("不改变原来服务器端的部署，不依赖其他类库")]),t._v(" "),s("li",[t._v("不侵入原有程序")]),t._v(" "),s("li",[t._v("临时代码应该直接支持Java语言")]),t._v(" "),s("li",[t._v("临时代码有足够的自由度，不依赖特定类或接口")]),t._v(" "),s("li",[t._v("执行结果可以返回客户端")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("思路：")])]),t._v(" "),s("ul",[s("li",[t._v("三个问题：如何编译、如何执行、如何收集结果")]),t._v(" "),s("li",[t._v("编译：依赖服务器编译 OR 在客户端编译后传字节码到服务器")]),t._v(" "),s("li",[t._v("执行：让服务器类加载器加载目标代码的Class文件并用反射调用某个方法即可。提交上去的类应该要能够访问服务端的其他类库，并且执行完后应该被卸载")]),t._v(" "),s("li",[t._v("收集输出结果：如果使用System.setOut()/System.setErr()方法把输出流重定向到自己定义的PrintStream对象上固然可以收集到输出信息，但也会对原有程序产生影响：会把其他线程向标准输出中打印的信息也收集了。通常直接在执行的类中把对System.out的符号引用替换为我们准备的PrintStream的符号引用")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("实现：")])]),t._v(" "),s("ul",[s("li",[t._v("HotSwapClassLoader 实现“同一个类的代码可以被多次加载”")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 为了多次载入执行类而加入的加载器\n* 把defineClass方法开放出来，只有外部显式调用的时候才会使用到loadByte方法\n* 由虚拟机调用时，仍然按照原有的双亲委派规则使用loadClass方法进行类加载\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotSwapClassLoader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassLoader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数中指定加载 HotSwapClassLoader的加载器为父类加载器，如此可以实现提交的执行代码可以访问服务端引用类库的需求")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为HotSwapClassLoader的加载必定是虚拟机中加载一般类库的加载器完成的")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将目标执行代码的加载也委派给该加载器，则满足同一个加载器加载的需求")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotSwapClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotSwapClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用于将提交执行的Java类的byte数组转换为Class对象，即加载类")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadByte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("实现将"),s("code",[t._v("java.lang.System")]),t._v("替换为自定义的"),s("code",[t._v("HackSystem")]),t._v("类。\n"),s("ul",[s("li",[t._v("直接修改符合Class文件格式的byte数组中的"),s("strong",[t._v("常量池")]),t._v("部分，将常量池中指定内容的CONSTANT_Utf8_info替换为新的字符串。")]),t._v(" "),s("li",[t._v("经过处理后的byte数组直接传递给HotSwapClassLoader加载")])])]),t._v(" "),s("li",[t._v("ClassModifier：实现类”替换“")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 修改Class文件，暂时只提供修改常量池常量的功能\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassModifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * Class文件中常量池的起始偏移\n    */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSTANT_POOL_COUNT_INDEX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * CONSTANT_Utf8_info常量的tag标志\n    */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CONSTANT_Utf8_info")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * 常量池中11种常量所占的长度，CONSTANT_Utf8_info型常量除外，因为它不是定长的\n    */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSTANT_ITEM_LENGTH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" u1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" u2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassModifier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classByte "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * 修改常量池中CONSTANT_Utf8_info常量的内容\n    * @param oldStr 修改前的字符串\n    * @param newStr 修改后的字符串\n    * @return 修改结果\n    */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("modifyUTF8Constant")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" oldStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" newStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cpc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConstantPoolCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSTANT_POOL_COUNT_INDEX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cpc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytes2Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CONSTANT_Utf8_info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytes2Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" u1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytes2String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equalsIgnoreCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" strBytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string2Bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" strLen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int2Bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    classByte "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytesReplace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strLen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    classByte "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytesReplace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSTANT_ITEM_LENGTH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * 获取常量池中常量的数量\n    * @return 常量池数量\n    */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConstantPoolCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytes2Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSTANT_POOL_COUNT_INDEX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("ByteUtils：封装byte的替换操作")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* Bytes数组处理工具\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteUtils")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytes2Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int2Bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytes2String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string2Bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bytesReplace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" originalBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" replaceBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" newBytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("originalBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("replaceBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arraycopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("originalBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arraycopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("replaceBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replaceBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arraycopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("originalBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" replaceBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" originalBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("HackSystem：用于替换java.lang.System的类")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 为Javaclass劫持java.lang.System提供支持\n* 除了out和err外，其余的都直接转发给System处理\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HackSystem")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteArrayOutputStream")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteArrayOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintStream")]),t._v(" out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintStream")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBufferString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSecurityManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityManager")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSecurityManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityManager")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSecurityManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSecurityManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arraycopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" srcPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" dest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" destPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arraycopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" srcPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" destPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("identityHashCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("identityHashCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面所有的方法都与java.lang.System的名称一样")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现都是字节转调System的对应方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("JavaClassExecuter：提供外部调用的入口")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* Javaclass执行工具\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JavaclassExecuter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * 执行外部传过来的代表一个Java类的Byte数组<br>\n    * 将输入类的byte数组中代表java.lang.System的CONSTANT_Utf8_info常量修改为劫持后的HackSystem类\n    * 执行方法为该类的static main(String[] args)方法，输出结果为该类向System.out/err输出的信息\n    * @param classByte 代表一个Java类的Byte数组\n    * @return 执行结果\n    */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HackSystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassModifier")]),t._v(" cm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassModifier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classByte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用修改器将 System类替换为HackSystem")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" modiBytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("modifyUTF8Constant")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java/lang/System"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org/xxxx/HackSystem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotSwapClassLoader")]),t._v(" loader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HotSwapClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" clazz "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" loader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadByte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modiBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取该类的Main方法并调用")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clazz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HackSystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HackSystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBufferString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"高效并发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高效并发"}},[t._v("#")]),t._v(" 高效并发")]),t._v(" "),s("h2",{attrs:{id:"java内存模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java内存模型"}},[t._v("#")]),t._v(" Java内存模型")]),t._v(" "),s("ul",[s("li",[t._v("Java内存模型的主要目的是定义程序中"),s("strong",[t._v("各种变量的访问规则")]),t._v("，即关注把变量存到内存和从内存取出的底层细节")]),t._v(" "),s("li",[t._v("此处的变量不同于Java语言中的变量，它包含实例字段、静态字段、构成数组对象的元素。但是不包含局部变量和方法参数。因为后者为线程私有，不会存在竞争")])]),t._v(" "),s("h3",{attrs:{id:"主内存与工作内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主内存与工作内存"}},[t._v("#")]),t._v(" 主内存与工作内存")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Java内存模型规定"),s("strong",[t._v("所有的变量(Variables)都存在主内存(Main Memory)中")])])]),t._v(" "),s("li",[s("p",[t._v("每条线程都有自己的"),s("strong",[t._v("工作内存(Working Memory)")]),t._v("，线程的工作内存中保存了被该线程使用的变量的"),s("strong",[t._v("主内存副本")]),t._v("，线程对变量的操作都必须在工作内存中进行")])]),t._v(" "),s("li",[s("p",[t._v("交互关系：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210503110336936.png",alt:"image-20210503110336936"}})])])]),t._v(" "),s("h3",{attrs:{id:"内存间的交互操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存间的交互操作"}},[t._v("#")]),t._v(" 内存间的交互操作")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("对于主内存和工作内存之间的交互，Java虚拟机规范定义了8种操作(都是原子的)")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("操作")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("lock")]),t._v(" "),s("td",[t._v("作用于主内存变量，将一个变量表示为线程独占")])]),t._v(" "),s("tr",[s("td",[t._v("unlock")]),t._v(" "),s("td",[t._v("作用于主内存变量，将一个锁定的变量解锁")])]),t._v(" "),s("tr",[s("td",[t._v("read")]),t._v(" "),s("td",[t._v("作用于主内存变量，将变量值从主内存传到工作内存，便于后续load使用")])]),t._v(" "),s("tr",[s("td",[t._v("load")]),t._v(" "),s("td",[t._v("作用于工作内存变量，把由read得到的值放入工作内存的变量副本中")])]),t._v(" "),s("tr",[s("td",[t._v("use")]),t._v(" "),s("td",[t._v("作用于工作内存变量，将变量值传递给执行引擎，当某条指令需要用到该变量时执行该操作")])]),t._v(" "),s("tr",[s("td",[t._v("assign")]),t._v(" "),s("td",[t._v("作用于工作内存变量，于use的操作相反")])]),t._v(" "),s("tr",[s("td",[t._v("store")]),t._v(" "),s("td",[t._v("作用于工作内存变量，将工作内存变量传递到主内存以便随后的write操作")])]),t._v(" "),s("tr",[s("td",[t._v("write")]),t._v(" "),s("td",[t._v("作用于主内存变量，将store的变量值存到主内存变量中")])])])])])]),t._v(" "),s("h3",{attrs:{id:"volatile类型变量的特殊规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile类型变量的特殊规则"}},[t._v("#")]),t._v(" volatile类型变量的特殊规则")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("关键词volatile可以说是Java虚拟机提供的最轻量级的同步机制")])]),t._v(" "),s("li",[s("p",[t._v("当一个变量为定义为"),s("code",[t._v("volatile")]),t._v("之后，具有如下特性：")]),t._v(" "),s("ul",[s("li",[t._v("保证此变量"),s("strong",[t._v("对所有线程的可见性")]),t._v("。即一个线程修改了此变量后，新值对于其他线程而言是立即可以得知的。而普通变量的值在线程之间传递需要经过主内存完成")]),t._v(" "),s("li",[s("strong",[t._v("注意："),s("strong",[t._v("虽然被此关键字修饰的变量在各个线程中具有一致性，但是，因为")]),t._v("Java中的运算操作符并非原子")]),t._v("的，所有"),s("code",[t._v("volatile")]),t._v("修饰的变量"),s("strong",[t._v("运算在并发时不是安全的")])])])]),t._v(" "),s("li",[s("p",[t._v("由于"),s("code",[t._v("volatile")]),t._v("修饰的变量只能保证可见性，因此，在"),s("strong",[t._v("不符合")]),t._v("以下规则的运算场景中"),s("strong",[t._v("仍需要加锁")]),t._v("来保证原子性")]),t._v(" "),s("ul",[s("li",[t._v("运算结果并不依赖变量的当前值，或者能够确保只有单一的线程修改变量的值。")]),t._v(" "),s("li",[t._v("变量不需要与其他的状态变量共同参与不变约束。")])])]),t._v(" "),s("li",[s("p",[t._v("适合使用"),s("code",[t._v("volatile")]),t._v("的一种情形")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当 shutdown() 执行后，可以保证其他线程的 doWork() 停止执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" shutdownRequested"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    shutdownRequested "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("shutdownRequested"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码的业务逻辑")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v("volatile")]),t._v("的第二种语义是"),s("strong",[t._v("禁止指令重排序优化")])]),t._v(" "),s("ul",[s("li",[t._v("普通变量只能保证在该方法执行过程中所有依赖值结果的地方都能获取正确结果，但"),s("strong",[t._v("不能保证变量赋值的操作顺序与代码中的执行顺序一致")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指令重排示例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),t._v(" configOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此变量必须定义为volatile")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" initialized "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设以下代码在线程A中执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟读取配置信息，当读取完成后")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将initialized设置为true,通知其他线程配置可用")]),t._v("\nconfigOptions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconfigText "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readConfigFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("processConfigOptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("configText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" configOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninitialized "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设以下代码在线程B中执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待initialized为true，代表线程A已经把配置信息初始化完成")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("initialized"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用线程A中初始化好的配置信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomethingWithConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("假设上例的"),s("code",[t._v("initialized")]),t._v("没有被"),s("code",[t._v("volatile")]),t._v("修饰，则可能因为指令重排优化导致"),s("code",[t._v("initialized=true")]),t._v("先被执行，导致逻辑发生错误")]),t._v(" "),s("li",[t._v("双锁检测(Double Check Lock, DCL)单例示例：")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需要声明为 volatile")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("volatile")]),t._v("的特点")]),t._v(" "),s("ul",[s("li",[t._v("volatile变量读操作的性能消耗与普通变量几乎没有什么差别，但是写操作则可能会慢上一些，因为它需要在本地代码中插入许多内存屏障指令来保证处理器不发生乱序执行。")]),t._v(" "),s("li",[t._v("大多数场景下volatile的总开销仍然要比锁来得更低")])])])]),t._v(" "),s("h3",{attrs:{id:"long和double的非原子性协定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#long和double的非原子性协定"}},[t._v("#")]),t._v(" long和double的非原子性协定")]),t._v(" "),s("ul",[s("li",[t._v("对于64位的数据类型(long和double)，Java内存模型规定了一条宽松的规则：允许虚拟机将"),s("strong",[t._v("没有被volatile")]),t._v("修饰的64位数据的读写拆分为2次32位数据读写")]),t._v(" "),s("li",[t._v("即允许虚拟机实现自行选择是否保证64位数据的load、store、read、write的原子性")]),t._v(" "),s("li",[t._v("但现在几乎不会存在此问题")])]),t._v(" "),s("h2",{attrs:{id:"java与线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java与线程"}},[t._v("#")]),t._v(" Java与线程")]),t._v(" "),s("h3",{attrs:{id:"线程的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程的实现"}},[t._v("#")]),t._v(" 线程的实现")]),t._v(" "),s("ul",[s("li",[t._v("每个已经调用过"),s("code",[t._v("start()")]),t._v("方法且还未结束的"),s("code",[t._v("java.lang.Thread")]),t._v("类的实例就是一个线程")]),t._v(" "),s("li",[t._v("实现线程主要有3种方式：\n"),s("ul",[s("li",[t._v("使用内核线程(1:1实现)")]),t._v(" "),s("li",[t._v("使用用户线程(1:N实现)")]),t._v(" "),s("li",[t._v("使用用户线程加轻量级进程混合实现(N:M实现)")])])])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("使用内核线程实现")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("内核线程(Kernel-Level Thread, KLT)是直接由操作系统内核支持的线程。")])]),t._v(" "),s("li",[s("p",[t._v("这种线程由内核完成线程切换，内核通过调度器对线程进行调度。每个线程可看作内核的一个分身")])]),t._v(" "),s("li",[s("p",[t._v("程序一般不会使用内核级线程，而是使用内核线程的一种高级接口——轻量级进程(Light Weight Process,LWP)")])]),t._v(" "),s("li",[s("p",[t._v("轻量级进程和内核线程之间的一对一关系：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210504103834453.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("轻量级进程的局限性")]),t._v(" "),s("ul",[s("li",[t._v("基于内核线程实现，各种操作(创建、析构等)都需要系统调用。而系统调用代价较高，需要在用户态和核心态之间切换")]),t._v(" "),s("li",[t._v("每个轻量级进程都需要一个内核线程支持，因此会消耗一定的内核资源")])])])])]),t._v(" "),s("li",[s("p",[t._v("用户线程实现")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("广义上非内核线程就可以叫作用户线程(User Thread,UT)；狭义上的用户线程是指完全建立在用户空间的线程库上，系统内核不能感知到其是否存在和如何实现的线程")])]),t._v(" "),s("li",[s("p",[t._v("用户线程的建立、同步、销毁和调度都在用户态下进行，不需要内核帮助")])]),t._v(" "),s("li",[s("p",[t._v("进程和用户线程关系：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210504104708470.png",alt:"image-20210504104708470"}})])]),t._v(" "),s("li",[s("p",[t._v("劣势：")]),t._v(" "),s("ul",[s("li",[t._v("所有线程操作都需要用户处理，比较麻烦且复杂")]),t._v(" "),s("li",[t._v("切换、阻塞、处理器映射关系比较难以处理")])])])])]),t._v(" "),s("li",[s("p",[t._v("混合实现")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("将用户线程和内核线程混合使用。此时用户线程仍在用户空间中，创建等操作依然消耗较少。而内核支持的轻量级进程作为内核线程和用户线程之间的桥梁。即用户线程负责创建等消耗小的操作，内核负责调度和处理器映射等操作")])]),t._v(" "),s("li",[s("p",[t._v("用户线程与轻量级进程的关系：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210504105257050.png",alt:"image-20210504105257050"}})])])])]),t._v(" "),s("li",[s("p",[t._v("Java线程的实现")]),t._v(" "),s("ul",[s("li",[t._v("Java线程如何实现不受虚拟机规范约束。从JDK1.3起，主流平台的主流商用Java虚拟机线程模型普遍替换为基于操作系统原生线程模型来实现，即1:1实现")]),t._v(" "),s("li",[t._v("HotSpot中的每个Java线程都直接映射到操作系统的一个原生线程。所以HotSpot本身不会干涉线程的调度")])])])]),t._v(" "),s("h3",{attrs:{id:"java线程调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java线程调度"}},[t._v("#")]),t._v(" Java线程调度")]),t._v(" "),s("ul",[s("li",[t._v("线程调度即分配处理机使用权的过程。主要有"),s("strong",[t._v("协同式调度")]),t._v("(Cooperative Threads Scheduling)和"),s("strong",[t._v("抢占式调度")]),t._v("(Preemptive Threads Scheduling)")]),t._v(" "),s("li",[t._v("协同式调度：线程的"),s("strong",[t._v("执行时间由线程本身来控制")]),t._v("，线程把自己的工作执行完了之后，要主动通知系统切换到另外一个线程上去")]),t._v(" "),s("li",[t._v("抢占式调度：那么每个"),s("strong",[t._v("线程将由系统来分配执行时间")]),t._v("，线程的切换不由线程本身来决定。譬如在Java中，有"),s("code",[t._v("Thread::yield()")]),t._v("方法可以主动让出执行时间，但是如果想要主动获取执行时间，线程本身是没有什么办法的。")]),t._v(" "),s("li",[t._v("Java使用的是抢占式调度")]),t._v(" "),s("li",[t._v("虽然Java中的线程调度由操作系统完成，但可以设置"),s("strong",[t._v("优先级")]),t._v("让线程得到多一点的时间执行")])]),t._v(" "),s("h3",{attrs:{id:"状态转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态转换"}},[t._v("#")]),t._v(" 状态转换")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Java中定义了线程的6种状态：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("新建")]),t._v("：创建后但未启动")]),t._v(" "),s("li",[s("strong",[t._v("运行")]),t._v("：处于此状态的线程可能在运行，也可能在等待操作系统调度")]),t._v(" "),s("li",[s("strong",[t._v("无限期等待")]),t._v("：处于此状态线程不会被分配处理器执行时间，需要"),s("strong",[t._v("其他线程显式唤醒")]),t._v("，可能造成此状态的情形：\n"),s("ul",[s("li",[s("code",[t._v("Object.wait()")]),t._v("没有设置Timeout参数")]),t._v(" "),s("li",[s("code",[t._v("Object.join()")]),t._v("没有设置Timeout参数")]),t._v(" "),s("li",[s("code",[t._v("LockSupport.park()")]),t._v("调用")])])]),t._v(" "),s("li",[s("strong",[t._v("限期等待")]),t._v("：该状态不会被分配处理器执行时间，但在一定时间后会自动唤醒，而不需要显式唤醒：\n"),s("ul",[s("li",[s("code",[t._v("Thread.sleep()")])]),t._v(" "),s("li",[s("code",[t._v("Object.wait()")]),t._v("设置了Timeout参数")]),t._v(" "),s("li",[s("code",[t._v("Object.join()")]),t._v("设置了Timeout参数")]),t._v(" "),s("li",[s("code",[t._v("LockSupport::parkNanos()")])]),t._v(" "),s("li",[s("code",[t._v("LockSupport::parkUntil()")])])])]),t._v(" "),s("li",[s("strong",[t._v("阻塞")]),t._v("：线程进入同步区域需要获得一个排它锁时进入此状态")]),t._v(" "),s("li",[s("strong",[t._v("结束")]),t._v("：线程已经结束运行")])])]),t._v(" "),s("li",[s("p",[t._v("转换关系")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210504111944334.png",alt:"image-20210504111944334"}})])])]),t._v(" "),s("h2",{attrs:{id:"线程安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程安全"}},[t._v("#")]),t._v(" 线程安全")]),t._v(" "),s("h3",{attrs:{id:"java语言种的线程安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java语言种的线程安全"}},[t._v("#")]),t._v(" Java语言种的线程安全")]),t._v(" "),s("ul",[s("li",[t._v("按“安全程度”，Java中各种操作共享的数据可大概分为5种类型\n"),s("ul",[s("li",[t._v("不可变")]),t._v(" "),s("li",[t._v("绝对线程安全")]),t._v(" "),s("li",[t._v("相对线程安全")]),t._v(" "),s("li",[t._v("线程兼容")]),t._v(" "),s("li",[t._v("线程对立")])])])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("不可变")]),t._v(" "),s("ul",[s("li",[t._v("不可变(Immutable)对象一定是线程安全的")]),t._v(" "),s("li",[t._v("若共享的数据类型为基本类型，只需要在定义时使用"),s("code",[t._v("final")]),t._v("关键字修饰即可保证其不变性。但对于对象类型，则需要该对象自身保证行为不会影响其状态，通常是将其成员变量设为final")])])]),t._v(" "),s("li",[s("p",[t._v("绝对线程安全")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("“绝对”的体现示例：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("java.util.Vector")]),t._v("是一个线程安全的容器，因为其"),s("code",[t._v("add()")]),t._v("、"),s("code",[t._v("get()")]),t._v("等方法都是被"),s("code",[t._v("synchronized")]),t._v("修饰的。即便如此，也不意味着调用时不需要同步")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vector")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" vector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vector")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" removeThread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" printThread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        removeThread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        printThread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不要同时产生过多的线程，否则会导致操作系统假死")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("activeCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("上述代码很可能产生下标越界错误。要保证不会出错，则应该加锁")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" removeThread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对 vector 的访问进行同步")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" printThread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("对于绝对线程安全，则是不管如何调用都不需要自己进行同步操作的。但绝对线性安全的实现可能会有更多的开销")])])])]),t._v(" "),s("li",[s("p",[t._v("相对线程安全")]),t._v(" "),s("ul",[s("li",[t._v("即通常意义上的线程安全，Java中多数的称为线程安全的类都是相对线程安全。如"),s("code",[t._v("Vector")]),t._v("等")]),t._v(" "),s("li",[t._v("相对线程安全的保证了单次调用是线程安全的。但某些特殊的调用顺序不能保证线程安全")])])]),t._v(" "),s("li",[s("p",[t._v("线程兼容")]),t._v(" "),s("ul",[s("li",[t._v("指类对象本身不是线程安全的。需要调用端通过一些同步操作保证线程安全。如ArrayList等")])])]),t._v(" "),s("li",[s("p",[t._v("线程对立")]),t._v(" "),s("ul",[s("li",[t._v("指调用端不管是否采用同步，都无法在多线程环境下并发使用代码。")]),t._v(" "),s("li",[t._v("如"),s("code",[t._v("Thread")]),t._v("类的"),s("code",[t._v("suspend()")]),t._v("和"),s("code",[t._v("resume()")]),t._v("方法，若两个线程同时对一个对象操作，且分别使用这两个方法，假设suspend一个正要resume的线程，则可能造成死锁")])])])]),t._v(" "),s("h3",{attrs:{id:"线程安全的实现方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程安全的实现方法"}},[t._v("#")]),t._v(" 线程安全的实现方法")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("互斥同步(Mutual Exclusion & Synchronization)")]),t._v(" "),s("ul",[s("li",[t._v("最常见也是最主要手段。")]),t._v(" "),s("li",[t._v("同步指多个线程并发访问共享数据时，共享数据在同一个时刻只能被一个线程(使用信号量时可以是多个)访问")]),t._v(" "),s("li",[s("strong",[t._v("互斥是实现同步的一种手段")]),t._v("。即互斥是方法，同步是目的。"),s("strong",[t._v("临界区")]),t._v("(Critical Section)、"),s("strong",[t._v("信号量")]),t._v("(Semaphore)、"),s("strong",[t._v("互斥量")]),t._v("(Mutex)都是常见的互斥实现方式")]),t._v(" "),s("li",[t._v("Java中最基本的互斥同步手段是"),s("code",[t._v("synchronized")]),t._v("关键字，这是一种"),s("strong",[t._v("块结构")]),t._v("的同步语法。")]),t._v(" "),s("li",[s("code",[t._v("synchronized")]),t._v("关键字经过javac编译后，会在同步块前后形成"),s("code",[t._v("monitorenter")]),t._v("和"),s("code",[t._v("monitorexit")]),t._v("两个字节码指令")]),t._v(" "),s("li",[t._v("上述两个指令都需要一个reference类型参数来指定要锁定或解锁的对象。若没有指定，则根据"),s("code",[t._v("synchronized")]),t._v("修饰的"),s("strong",[t._v("方法类型")]),t._v("(实例方法还是static修饰的类方法)来决定要使用方法所在对象还是类来作为线程持有的锁")]),t._v(" "),s("li",[t._v("在执行monitorenter指令时，首先要去"),s("strong",[t._v("尝试获取对象的锁")]),t._v("。如果这个对象没被锁定，或者当前线程已经持有了那个对象的锁，就把锁的"),s("strong",[t._v("计数器的值增加一")]),t._v("，而在执行monitorexit指令时会将锁计数器的值减一。一旦计数器的值为零，锁随即就被释放了")]),t._v(" "),s("li",[t._v("关于synchronized的两条结论和注意事项\n"),s("ul",[s("li",[t._v("被synchronized修饰的同步块对同一条线程来说是"),s("strong",[t._v("可重入的")]),t._v("。这意味着同一线程反复进入同步块也不会出现自己把自己锁死的情况。")]),t._v(" "),s("li",[t._v("被synchronized修饰的同步块在持有锁的线程执行完毕并释放锁之前，会"),s("strong",[t._v("无条件地阻塞")]),t._v("后面其他线程的进入。这意味着无法像处理某些数据库中的锁那样，强制已获取锁的线程释放锁；也无法强制正在等待锁的线程中断等待或超时退出")])])]),t._v(" "),s("li",[t._v("从执行成本的角度看，"),s("strong",[t._v("持有锁是一个重量级（Heavy-Weight）的操作")]),t._v("：因为Java的线程是映射到操作系统原生线程上的，因此阻塞或唤醒需要操作系统帮忙，则需要用户态和核心态的切换，比较耗费处理时间")]),t._v(" "),s("li",[t._v("虚拟机本身会为"),s("code",[t._v("synchronized")]),t._v("做一定优化，如阻塞线程之间加上一个自旋等待过程，避免频繁切换到核心态")]),t._v(" "),s("li",[t._v("考虑到"),s("code",[t._v("synchronized")]),t._v("的局限性(重量级)，JDK5开始提供了一个"),s("code",[t._v("java.util.concurrent")]),t._v("(J.U.C)包，其中的"),s("code",[t._v("java.util.concurrent.locks.Lock")]),t._v("接口成了一种全新的同步互斥手段")]),t._v(" "),s("li",[t._v("基于Lock接口，可以以"),s("strong",[t._v("非块结构")]),t._v("实现同步。")]),t._v(" "),s("li",[t._v("重入锁(ReentrantLock)是Lock接口最常见的一种实现。同"),s("code",[t._v("synchronized")]),t._v("一样是可重入的。相比而言，增加了一些高级功能：\n"),s("ul",[s("li",[s("strong",[t._v("等待可中断")]),t._v(" "),s("ul",[s("li",[t._v("当持有锁的线程长期不释放锁的时候，"),s("strong",[t._v("正在等待的线程可以选择放弃等待，改为处理其他事情")]),t._v("。可中断特性对处理执行时间非常长的同步块很有帮助")])])]),t._v(" "),s("li",[s("strong",[t._v("公平锁")]),t._v(" "),s("ul",[s("li",[t._v("多个线程在等待同一个锁时，必须"),s("strong",[t._v("按照申请锁的时间顺序来依次获得锁")]),t._v("。")]),t._v(" "),s("li",[t._v("ReentrantLock在"),s("strong",[t._v("默认情况下也是非公平的")]),t._v("，但可以通过带布尔值的构造函数要求使用公平锁。不过一旦使用了公平锁，将会导致ReentrantLock的性能急剧下降")])])]),t._v(" "),s("li",[s("strong",[t._v("锁绑定多个条件")]),t._v(" "),s("ul",[s("li",[t._v("一个ReentrantLock对象"),s("strong",[t._v("可以同时绑定多个Condition对象")])]),t._v(" "),s("li",[t._v("synchronized中，锁对象的wait()跟它的notify()或者notifyAll()方法配合可以实现一个隐含的条件，如果要和多于一个的条件关联的时候，就不得不额外添加一个锁；")]),t._v(" "),s("li",[t._v("而ReentrantLock则无须这样做，多次调用newCondition()方法即可")])])])])]),t._v(" "),s("li",[t._v("从性能上来说，JDK6对"),s("code",[t._v("synchronized")]),t._v("进行了优化，其性能基本与"),s("code",[t._v("ReentrantLock")]),t._v("持平。对于JDK6及以上版本，性能已经不是选择二者的决定因素了。")])])]),t._v(" "),s("li",[s("strong",[t._v("非阻塞同步")]),t._v(" "),s("ul",[s("li",[t._v("互斥同步面临的主要问题是进行线程阻塞和唤醒所带来的性能开销，因此这种同步也被称为阻塞同步（Blocking Synchronization）")]),t._v(" "),s("li",[t._v("互斥同步属于一种"),s("strong",[t._v("悲观的并发策略")]),t._v("，其总是认为只要不去做正确的同步措施（例如加锁），那就肯定会出现问题")]),t._v(" "),s("li",[t._v("另外一种选择为基于冲突检测的"),s("strong",[t._v("乐观并发策略")]),t._v("，通俗地说就是"),s("strong",[t._v("不管风险，先进行操作")]),t._v("，如果没有其他线程争用共享数据，那操作就直接成功了；如果共享的数据的确被争用，产生了冲突，那再进行其他的补偿措施，最常用的补偿措施是不断地重试，直到出现没有竞争的共享数据为止")]),t._v(" "),s("li",[t._v("这种乐观并发策略的实现"),s("strong",[t._v("不再需要把线程阻塞挂起")]),t._v("，因此这种同步操作被称为非阻塞同步（Non-Blocking Synchronization），使用这种措施的代码也常被称为无锁（Lock-Free）编程。")]),t._v(" "),s("li",[s("strong",[t._v("乐观并发需要硬件指令集的扩展")]),t._v("。因为必须要操作和冲突检测有原子性。而使用互斥保证原子性就没有意义了，因此需要硬件指令直接完成，如常用的：\n"),s("ul",[s("li",[s("strong",[t._v("测试并设置")]),t._v("(Test-and-Set)")]),t._v(" "),s("li",[s("strong",[t._v("获取并增加")]),t._v("(Fetch-and-Increment)")]),t._v(" "),s("li",[s("strong",[t._v("交换")]),t._v("(Swap)")]),t._v(" "),s("li",[s("strong",[t._v("比较并交换")]),t._v("(Compare-and-Swap, CAS)")]),t._v(" "),s("li",[s("strong",[t._v("加载链接")]),t._v("/"),s("strong",[t._v("条件存储")]),t._v("(Load-Linked/Store-Conditional, LL/SC)")])])]),t._v(" "),s("li",[t._v("在Java中，CAS指令需要3个操作数，分别为内存位置、旧的期望值、准备设置的值。CAS指令执行时，"),s("strong",[t._v("当且仅当旧的期望值符合内存位置的值时，才将准备设置的值来更新内存位置的值")]),t._v("。(保证了更新时没有其他线程改变过该值)而不管是否更新，都返回旧值。"),s("strong",[t._v("CAS是一个原子操作")])]),t._v(" "),s("li",[t._v("在JDK 5之后，Java类库中才开始使用CAS操作，该操作由"),s("code",[t._v("sun.misc.Unsafe")]),t._v("类里面的"),s("code",[t._v("compareAndSwapInt()")]),t._v("和"),s("code",[t._v("compareAndSwapLong()")]),t._v("等几个方法包装提供")]),t._v(" "),s("li",[t._v("JDK9之前，如果用户程序也有使用CAS操作的需求，那要么就采用反射手段突破Unsafe的访问限制，要么就只能通过Java类库API来间接使用它。直到JDK 9之后，Java类库才在VarHandle类里开放了面向用户程序使用的CAS操作")]),t._v(" "),s("li",[t._v("CAS在逻辑上有一个漏洞：如果一个变量V初次读取的时候是A值，并且在准备赋值的时候检查到它仍然为A值，此时并不能说明该值没有改变过，有可能改为B之后再改为A，但CAS并不知道。即ABA问题")])])]),t._v(" "),s("li",[s("strong",[t._v("无同步方案")]),t._v(" "),s("ul",[s("li",[t._v("线程安全和互斥同步并无必然联系。某些不涉及共享数据的代码就不需要同步。有些代码本身就是线程安全的，如：")]),t._v(" "),s("li",[s("strong",[t._v("可重入代码")]),t._v("(Reentrant Code)：可以在代码执行的任何时候中断，而在控制权转回的时候原来程序不会出现任何错误，结果也不受影响。")]),t._v(" "),s("li",[t._v("如果一个方法的返回结果是可以预测的，只要输入了相同的数据，就都能返回相同的结果，那它就满足可重入性的要求")]),t._v(" "),s("li",[s("strong",[t._v("线程本地存储")]),t._v("(Thread Local Storage)：共享数据的可见范围限制在同一个线程之内。")]),t._v(" "),s("li",[t._v("可以通过"),s("code",[t._v("java.lang.ThreadLocal")]),t._v("类来实现线程本地存储的功能")]),t._v(" "),s("li",[t._v("每一个线程的Thread对象中都有一个"),s("code",[t._v("ThreadLocalMap")]),t._v("对象，这个对象存储了一组以"),s("code",[t._v("ThreadLocal.threadLocalHashCode")]),t._v("为键，以"),s("strong",[t._v("本地线程变量为值")]),t._v("的K-V值对")]),t._v(" "),s("li",[t._v("ThreadLocal对象就是当前线程的ThreadLocalMap的访问入口，每一个ThreadLocal对象都包含了一个独一无二的threadLocalHashCode值，"),s("strong",[t._v("使用这个值就可以在线程K-V值对中找回对应的本地线程变量")])])])])]),t._v(" "),s("h2",{attrs:{id:"锁优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁优化"}},[t._v("#")]),t._v(" 锁优化")]),t._v(" "),s("h3",{attrs:{id:"自旋锁与自适应自旋-adaptive-spinning"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自旋锁与自适应自旋-adaptive-spinning"}},[t._v("#")]),t._v(" 自旋锁与自适应自旋(Adaptive Spinning)")]),t._v(" "),s("ul",[s("li",[t._v("共享数据的锁定状态只会持续很短的一段时间，为了这段时间去挂起和恢复线程并不值得。")]),t._v(" "),s("li",[t._v("可以"),s("strong",[t._v("让后面请求锁的那个线程“稍等一会”")]),t._v("，但不放弃处理器的执行时间，看看持有锁的线程是否很快就会释放锁。为了让线程等待，我们只须"),s("strong",[t._v("让线程执行一个忙循环（自旋）")]),t._v("，这项技术就是所谓的"),s("strong",[t._v("自旋锁")])]),t._v(" "),s("li",[t._v("如果锁被占用的时间很短，自旋等待的效果就会非常好，反之如果锁被占用的时间很长，那么自旋的线程只会白白消耗处理器资源，而不会做任何有价值的工作，这就会带来性能的浪费")]),t._v(" "),s("li",[t._v("如果自旋超过了限定的次数仍然没有成功获得锁，就应当使用传统的方式去挂起线程。自旋次数的默认值是十次，用户也可以使用参数"),s("code",[t._v("-XX：PreBlockSpin")]),t._v("来自行更改。")]),t._v(" "),s("li",[t._v("JDK 6中对自旋锁的优化，引入了"),s("strong",[t._v("自适应的自旋")]),t._v("。自适应意味着自旋的时间不再是固定，而是由前一次在同一个锁上的自旋时间及锁的拥有者的状态来决定的")])]),t._v(" "),s("h3",{attrs:{id:"锁消除-lock-elimination"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁消除-lock-elimination"}},[t._v("#")]),t._v(" 锁消除(Lock Elimination)")]),t._v(" "),s("ul",[s("li",[t._v("锁消除是指虚拟机即时编译器在运行时，对一些代码要求同步，但是对被"),s("strong",[t._v("检测到不可能存在共享数据竞争的锁进行消除")])]),t._v(" "),s("li",[t._v("锁消除的主要判定依据来源于"),s("strong",[t._v("逃逸分析")]),t._v("的数据支持，如果判断到一段代码中，在堆上的所有数据都不会逃逸出去被其他线程访问到，那就可以把它们当作栈上数据对待，认为它们是线程私有的，同步加锁自然就无须再进行。")])]),t._v(" "),s("h3",{attrs:{id:"锁粗化-lock-coarsening"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁粗化-lock-coarsening"}},[t._v("#")]),t._v(" 锁粗化(Lock Coarsening)")]),t._v(" "),s("ul",[s("li",[t._v("如果虚拟机探测到有这样"),s("strong",[t._v("一串零碎的操作都对同一个对象加锁")]),t._v("，将会把加锁同步的范围扩展（粗化）到整个操作序列的外部。以减少频繁的互斥与同步带来的性能损耗")])]),t._v(" "),s("h3",{attrs:{id:"轻量级锁-light-weight-locking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#轻量级锁-light-weight-locking"}},[t._v("#")]),t._v(" 轻量级锁(Light-Weight Locking)")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("轻量级锁是JDK 6时加入的新型锁机制，它名字中的“轻量级”是相对于使用操作系统互斥量来实现的传统锁而言的,因此传统的锁机制就被称为“重量级”锁")])]),t._v(" "),s("li",[s("p",[t._v("轻量级锁并不是用来代替重量级锁的，它设计的初衷是"),s("strong",[t._v("在没有多线程竞争的前提下，减少传统的重量级锁使用操作系统互斥量产生的性能消耗")])])]),t._v(" "),s("li",[s("p",[t._v("HotSpot虚拟机中对象的内存布局简介：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("对象头")]),t._v("(Object Header)分为两部分\n"),s("ul",[s("li",[t._v("第一部分：存储对象自身的运行时数据，如哈希码、GC分代年龄等。该部分在32位和64位机器中分别占32或64比特。称为"),s("strong",[t._v("Mark Word")]),t._v("。"),s("strong",[t._v("是实现轻量锁和偏向锁的关键")])]),t._v(" "),s("li",[t._v("第二部分：存储指向方法区对象类型数据(Class类保存的元数据？)的指针。若为数组，还有一个额外部分用于存储长度")])])]),t._v(" "),s("li",[t._v("Mark Word图示：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210504170245449.png",alt:"image-20210504170245449"}})])]),t._v(" "),s("li",[s("p",[t._v("轻量级锁的工作过程：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在代码即将进入同步块的时候，"),s("strong",[t._v("如果此同步对象没有被锁定")]),t._v("（锁标志位为“01”状态），虚拟机首先将在当前线程的栈帧中"),s("strong",[t._v("建立一个名为锁记录（Lock Record）的空间，用于存储锁对象目前的Mark Word的拷贝")]),t._v("（官方为这份拷贝加了一个Displaced前缀，即Displaced Mark Word）(用于CAS)，图示如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210504172305310.png",alt:"image-20210504172305310"}})])]),t._v(" "),s("li",[s("p",[t._v("然后，虚拟机使用CAS操作尝试把对象的Mark Word更新为指向Lock Record(Mark Word在栈中的拷贝)的指针")])]),t._v(" "),s("li",[s("p",[t._v("如果这个更新动作成功了，即代表该线程拥有了这个对象的锁，并且对象Mark Word的"),s("strong",[t._v("锁标志位（Mark Word的最后两个比特）将转变为“00”，表示此对象处于轻量级锁定状态")])])]),t._v(" "),s("li",[s("p",[t._v("如果这个更新操作失败了，那就意味着至少存在一条线程与当前线程竞争获取该对象的锁。虚拟机首先会"),s("strong",[t._v("检查对象的Mark Word是否指向当前线程的栈帧")]),t._v("，如果是，说明当前线程已经拥有了这个对象的锁，那直接进入同步块继续执行就可以了，否则就说明这个锁对象已经被其他线程抢占")])]),t._v(" "),s("li",[s("p",[t._v("如果出现"),s("strong",[t._v("两条以上")]),t._v("的线程"),s("strong",[t._v("争用同一个锁")]),t._v("的情况，那轻量级锁就不再有效，(同时建立Lock Record，但CAS时都失败？)必须要膨胀为重量级锁，锁标志的状态值变为“10”，此时Mark Word中存储的就是指向重量级锁（互斥量）的指针，后面等待锁的线程也必须进入阻塞状态")])]),t._v(" "),s("li",[s("p",[t._v("上述为加锁，"),s("strong",[t._v("解锁过程")]),t._v("也同样是通过CAS操作来进行的，如果对象的Mark Word仍然指向线程的锁记录，那就用CAS操作把对象当前的Mark Word和线程中复制的DisplacedMark Word替换回来")])]),t._v(" "),s("li",[s("p",[t._v("假如能够成功替换，那整个同步过程就顺利完成了")])]),t._v(" "),s("li",[s("p",[t._v("如果替换失败，则说明有其他线程尝试过获取该锁，就要在释放锁的同时，唤醒被挂起的线程")])])])]),t._v(" "),s("li",[s("p",[t._v("轻量级锁能提升程序同步性能的"),s("strong",[t._v("依据是“对于绝大部分的锁，在整个同步周期内都是不存在竞争的”这一经验法则")]),t._v("。如果没有竞争，轻量级锁便"),s("strong",[t._v("通过CAS操作成功避免了使用互斥量的开销")]),t._v("；但如果确实存在锁竞争，除了互斥量的本身开销外，还额外发生了CAS操作的开销。因此在有竞争的情况下，轻量级锁反而会比传统的重量级锁更慢")])])]),t._v(" "),s("h3",{attrs:{id:"偏向锁-biased-locking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#偏向锁-biased-locking"}},[t._v("#")]),t._v(" 偏向锁(Biased Locking)")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("偏向锁也是JDK 6中引入的一项锁优化措施，它的"),s("strong",[t._v("目的是消除数据在无竞争情况下的同步原语")]),t._v("，进一步提高程序的运行性能")])]),t._v(" "),s("li",[s("p",[t._v("偏向锁在无竞争的情况下把整个同步都消除掉，连CAS操作都不去做")])]),t._v(" "),s("li",[s("p",[t._v("“偏”的意思是这个"),s("strong",[t._v("锁会偏向于第一个获得它的线程")]),t._v("，如果在接下来的执行过程中，该锁一直没有被其他的线程获取，则持有偏向锁的线程将永远不需要再进行同步")])]),t._v(" "),s("li",[s("p",[t._v("当锁对象"),s("strong",[t._v("第一次")]),t._v("被线程获取的时候，虚拟机将会把对象头中的标志位设置为“01”、把偏向模式设置为“1”，表示进入偏向模式")])]),t._v(" "),s("li",[s("p",[t._v("同时使用"),s("strong",[t._v("CAS操作把获取到这个锁的线程的ID记录在对象的Mark Word之中")]),t._v("。如果CAS操作成功，持有偏向锁的线程以后每次进入这个锁相关的同步块时，虚拟机都可以不再进行任何同步操作")])]),t._v(" "),s("li",[s("p",[t._v("一旦出现"),s("strong",[t._v("另外一个线程去尝试获取这个锁")]),t._v("的情况，偏向模式就马上宣告结束")])]),t._v(" "),s("li",[s("p",[t._v("根据"),s("strong",[t._v("锁对象目前是否处于被锁定的状态")]),t._v("决定是否撤销偏向（偏向模式设置为“0”），撤销后标志位恢复到未锁定（标志位为“01”）或轻量级锁定（标志位为“00”）的状态，后续的同步操作同轻量级锁操作")])]),t._v(" "),s("li",[s("p",[t._v("当一个对象"),s("strong",[t._v("已经计算过一致性哈希码后，它就再也无法进入偏向锁状态了")]),t._v("；而当一个对象当前正处于偏向锁状态，又收到需要计算其一致性哈希码请求时(重写hashCode()方法计算哈希码时并不会这种请求)，它的偏向状态会被立即撤销，并且锁会"),s("strong",[t._v("膨胀为重量级锁")])])]),t._v(" "),s("li",[s("p",[t._v("转换关系图")]),t._v(" "),s("p",[s("img",{attrs:{src:"/jvm-pic/image-20210504174516832.png",alt:"image-20210504174516832"}})])])])])}),[],!1,null,null,null);s.default=e.exports}}]);